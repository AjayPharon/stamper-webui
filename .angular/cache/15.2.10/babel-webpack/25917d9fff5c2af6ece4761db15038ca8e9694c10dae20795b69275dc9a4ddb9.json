{"ast":null,"code":"import { fromEvent } from 'rxjs';\nimport { Directive, ElementRef, Renderer2, Input, Output, HostListener, EventEmitter, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nimport * as Éµngcc0 from '@angular/core';\nclass Position {\n  /**\r\n   * @param {?} x\r\n   * @param {?} y\r\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  /**\r\n   * @param {?} e\r\n   * @param {?=} el\r\n   * @return {?}\r\n   */\n  static fromEvent(e, el = null) {\n    /**\r\n     * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n     * https://github.com/xieziyu/angular2-draggable/issues/164\r\n     * e instanceof MouseEvent check returns false on IE11\r\n     */\n    if (this.isMouseEvent(e)) {\n      return new Position(e.clientX, e.clientY);\n    } else {\n      if (el === null || e.changedTouches.length === 1) {\n        return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n      }\n      /**\r\n       * Fix issue: Multiple phone draggables at the same time\r\n       * https://github.com/xieziyu/angular2-draggable/issues/128\r\n       */\n      for (let i = 0; i < e.changedTouches.length; i++) {\n        if (e.changedTouches[i].target === el) {\n          return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\n        }\n      }\n    }\n  }\n  /**\r\n   * @param {?} e\r\n   * @return {?}\r\n   */\n  static isMouseEvent(e) {\n    return Object.prototype.toString.apply(e).indexOf('MouseEvent') === 8;\n  }\n  /**\r\n   * @param {?} obj\r\n   * @return {?}\r\n   */\n  static isIPosition(obj) {\n    return !!obj && 'x' in obj && 'y' in obj;\n  }\n  /**\r\n   * @param {?} el\r\n   * @return {?}\r\n   */\n  static getCurrent(el) {\n    /** @type {?} */\n    let pos = new Position(0, 0);\n    if (window) {\n      /** @type {?} */\n      const computed = window.getComputedStyle(el);\n      if (computed) {\n        /** @type {?} */\n        let x = parseInt(computed.getPropertyValue('left'), 10);\n        /** @type {?} */\n        let y = parseInt(computed.getPropertyValue('top'), 10);\n        pos.x = isNaN(x) ? 0 : x;\n        pos.y = isNaN(y) ? 0 : y;\n      }\n      return pos;\n    } else {\n      console.error('Not Supported!');\n      return null;\n    }\n  }\n  /**\r\n   * @param {?} p\r\n   * @return {?}\r\n   */\n  static copy(p) {\n    return new Position(0, 0).set(p);\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get value() {\n    return {\n      x: this.x,\n      y: this.y\n    };\n  }\n  /**\r\n   * @template THIS\r\n   * @this {THIS}\r\n   * @param {?} p\r\n   * @return {THIS}\r\n   */\n  add(p) {\n    /** @type {?} */this.x += p.x;\n    /** @type {?} */this.y += p.y;\n    return (/** @type {?} */this\n    );\n  }\n  /**\r\n   * @template THIS\r\n   * @this {THIS}\r\n   * @param {?} p\r\n   * @return {THIS}\r\n   */\n  subtract(p) {\n    /** @type {?} */this.x -= p.x;\n    /** @type {?} */this.y -= p.y;\n    return (/** @type {?} */this\n    );\n  }\n  /**\r\n   * @param {?} n\r\n   * @return {?}\r\n   */\n  multiply(n) {\n    this.x *= n;\n    this.y *= n;\n  }\n  /**\r\n   * @param {?} n\r\n   * @return {?}\r\n   */\n  divide(n) {\n    this.x /= n;\n    this.y /= n;\n  }\n  /**\r\n   * @template THIS\r\n   * @this {THIS}\r\n   * @return {THIS}\r\n   */\n  reset() {\n    /** @type {?} */this.x = 0;\n    /** @type {?} */this.y = 0;\n    return (/** @type {?} */this\n    );\n  }\n  /**\r\n   * @template THIS\r\n   * @this {THIS}\r\n   * @param {?} p\r\n   * @return {THIS}\r\n   */\n  set(p) {\n    /** @type {?} */this.x = p.x;\n    /** @type {?} */this.y = p.y;\n    return (/** @type {?} */this\n    );\n  }\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass HelperBlock {\n  /**\r\n   * @param {?} parent\r\n   * @param {?} renderer\r\n   */\n  constructor(parent, renderer) {\n    this.parent = parent;\n    this.renderer = renderer;\n    this._added = false;\n    // generate helper div\n    /** @type {?} */\n    let helper = renderer.createElement('div');\n    renderer.setStyle(helper, 'position', 'absolute');\n    renderer.setStyle(helper, 'width', '100%');\n    renderer.setStyle(helper, 'height', '100%');\n    renderer.setStyle(helper, 'background-color', 'transparent');\n    renderer.setStyle(helper, 'top', '0');\n    renderer.setStyle(helper, 'left', '0');\n    // done\n    this._helper = helper;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  add() {\n    // append div to parent\n    if (this.parent && !this._added) {\n      this.parent.appendChild(this._helper);\n      this._added = true;\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n  remove() {\n    if (this.parent && this._added) {\n      this.parent.removeChild(this._helper);\n      this._added = false;\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n  dispose() {\n    this._helper = null;\n    this._added = false;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get el() {\n    return this._helper;\n  }\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass AngularDraggableDirective {\n  /**\r\n   * @param {?} el\r\n   * @param {?} renderer\r\n   */\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n    this.allowDrag = true;\n    this.moving = false;\n    this.orignal = null;\n    this.oldTrans = new Position(0, 0);\n    this.tempTrans = new Position(0, 0);\n    this.currTrans = new Position(0, 0);\n    this.oldZIndex = '';\n    this._zIndex = '';\n    this.needTransform = false;\n    this.draggingSub = null;\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/angular2-draggable/issues/84\r\n     */\n    this._helperBlock = null;\n    this.started = new EventEmitter();\n    this.stopped = new EventEmitter();\n    this.edge = new EventEmitter();\n    /**\r\n     * List of allowed out of bounds edges *\r\n     */\n    this.outOfBounds = {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false\n    };\n    /**\r\n     * Round the position to nearest grid\r\n     */\n    this.gridSize = 1;\n    /**\r\n     * Whether to limit the element stay in the bounds\r\n     */\n    this.inBounds = false;\n    /**\r\n     * Whether the element should use it's previous drag position on a new drag event.\r\n     */\n    this.trackPosition = true;\n    /**\r\n     * Input css scale transform of element so translations are correct\r\n     */\n    this.scale = 1;\n    /**\r\n     * Whether to prevent default event\r\n     */\n    this.preventDefaultEvent = false;\n    /**\r\n     * Set initial position by offsets\r\n     */\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * Lock axis: 'x' or 'y'\r\n     */\n    this.lockAxis = null;\n    /**\r\n     * Emit position offsets when moving\r\n     */\n    this.movingOffset = new EventEmitter();\n    /**\r\n     * Emit position offsets when put back\r\n     */\n    this.endOffset = new EventEmitter();\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\n  }\n  /**\r\n   * Set z-index when not dragging\r\n   * @param {?} setting\r\n   * @return {?}\r\n   */\n  set zIndex(setting) {\n    this.renderer.setStyle(this.el.nativeElement, 'z-index', setting);\n    this._zIndex = setting;\n  }\n  /**\r\n   * @param {?} setting\r\n   * @return {?}\r\n   */\n  set ngDraggable(setting) {\n    if (setting !== undefined && setting !== null && setting !== '') {\n      this.allowDrag = !!setting;\n      /** @type {?} */\n      let element = this.getDragEl();\n      if (this.allowDrag) {\n        this.renderer.addClass(element, 'ng-draggable');\n      } else {\n        this.putBack();\n        this.renderer.removeClass(element, 'ng-draggable');\n      }\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngOnInit() {\n    if (this.allowDrag) {\n      /** @type {?} */\n      let element = this.getDragEl();\n      this.renderer.addClass(element, 'ng-draggable');\n    }\n    this.resetPosition();\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngOnDestroy() {\n    this.bounds = null;\n    this.handle = null;\n    this.orignal = null;\n    this.oldTrans = null;\n    this.tempTrans = null;\n    this.currTrans = null;\n    this._helperBlock.dispose();\n    this._helperBlock = null;\n    if (this.draggingSub) {\n      this.draggingSub.unsubscribe();\n    }\n  }\n  /**\r\n   * @param {?} changes\r\n   * @return {?}\r\n   */\n  ngOnChanges(changes) {\n    if (changes['position'] && !changes['position'].isFirstChange()) {\n      /** @type {?} */\n      let p = changes['position'].currentValue;\n      if (!this.moving) {\n        if (Position.isIPosition(p)) {\n          this.oldTrans.set(p);\n        } else {\n          this.oldTrans.reset();\n        }\n        this.transform();\n      } else {\n        this.needTransform = true;\n      }\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngAfterViewInit() {\n    if (this.inBounds) {\n      this.boundsCheck();\n      this.oldTrans.add(this.tempTrans);\n      this.tempTrans.reset();\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  getDragEl() {\n    return this.handle ? this.handle : this.el.nativeElement;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  resetPosition() {\n    if (Position.isIPosition(this.position)) {\n      this.oldTrans.set(this.position);\n    } else {\n      this.oldTrans.reset();\n    }\n    this.tempTrans.reset();\n    this.transform();\n  }\n  /**\r\n   * @private\r\n   * @param {?} p\r\n   * @return {?}\r\n   */\n  moveTo(p) {\n    if (this.orignal) {\n      p.subtract(this.orignal);\n      this.tempTrans.set(p);\n      this.tempTrans.divide(this.scale);\n      this.transform();\n      if (this.bounds) {\n        this.edge.emit(this.boundsCheck());\n      }\n      this.movingOffset.emit(this.currTrans.value);\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  transform() {\n    /** @type {?} */\n    let translateX = this.tempTrans.x + this.oldTrans.x;\n    /** @type {?} */\n    let translateY = this.tempTrans.y + this.oldTrans.y;\n    if (this.lockAxis === 'x') {\n      translateX = this.oldTrans.x;\n      this.tempTrans.x = 0;\n    } else if (this.lockAxis === 'y') {\n      translateY = this.oldTrans.y;\n      this.tempTrans.y = 0;\n    }\n    // Snap to grid: by grid size\n    if (this.gridSize > 1) {\n      translateX = Math.round(translateX / this.gridSize) * this.gridSize;\n      translateY = Math.round(translateY / this.gridSize) * this.gridSize;\n    }\n    /** @type {?} */\n    let value = `translate(${Math.round(translateX)}px, ${Math.round(translateY)}px)`;\n    this.renderer.setStyle(this.el.nativeElement, 'transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-ms-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-moz-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-o-transform', value);\n    // save current position\n    this.currTrans.x = translateX;\n    this.currTrans.y = translateY;\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  pickUp() {\n    // get old z-index:\n    this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : '';\n    if (window) {\n      this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue('z-index');\n    }\n    if (this.zIndexMoving) {\n      this.renderer.setStyle(this.el.nativeElement, 'z-index', this.zIndexMoving);\n    }\n    if (!this.moving) {\n      this.started.emit(this.el.nativeElement);\n      this.moving = true;\n      /** @type {?} */\n      const element = this.getDragEl();\n      this.renderer.addClass(element, 'ng-dragging');\n      /**\r\n       * Fix performance issue:\r\n       * https://github.com/xieziyu/angular2-draggable/issues/112\r\n       */\n      this.subscribeEvents();\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  subscribeEvents() {\n    this.draggingSub = fromEvent(document, 'mousemove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove( /** @type {?} */event));\n    this.draggingSub.add(fromEvent(document, 'touchmove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove( /** @type {?} */event)));\n    this.draggingSub.add(fromEvent(document, 'mouseup', {\n      passive: false\n    }).subscribe(() => this.putBack()));\n    // checking if browser is IE or Edge - https://github.com/xieziyu/angular2-draggable/issues/153\n    /** @type {?} */\n    let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    if (!isIEOrEdge) {\n      this.draggingSub.add(fromEvent(document, 'mouseleave', {\n        passive: false\n      }).subscribe(() => this.putBack()));\n    }\n    this.draggingSub.add(fromEvent(document, 'touchend', {\n      passive: false\n    }).subscribe(() => this.putBack()));\n    this.draggingSub.add(fromEvent(document, 'touchcancel', {\n      passive: false\n    }).subscribe(() => this.putBack()));\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  unsubscribeEvents() {\n    this.draggingSub.unsubscribe();\n    this.draggingSub = null;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  boundsCheck() {\n    if (this.bounds) {\n      /** @type {?} */\n      let boundary = this.bounds.getBoundingClientRect();\n      /** @type {?} */\n      let elem = this.el.nativeElement.getBoundingClientRect();\n      /** @type {?} */\n      let result = {\n        'top': this.outOfBounds.top ? true : boundary.top < elem.top,\n        'right': this.outOfBounds.right ? true : boundary.right > elem.right,\n        'bottom': this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\n        'left': this.outOfBounds.left ? true : boundary.left < elem.left\n      };\n      if (this.inBounds) {\n        if (!result.top) {\n          this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\n        }\n        if (!result.bottom) {\n          this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\n        }\n        if (!result.right) {\n          this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\n        }\n        if (!result.left) {\n          this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\n        }\n        this.transform();\n      }\n      return result;\n    }\n  }\n  /**\r\n   * Get current offset\r\n   * @return {?}\r\n   */\n  getCurrentOffset() {\n    return this.currTrans.value;\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  putBack() {\n    if (this._zIndex) {\n      this.renderer.setStyle(this.el.nativeElement, 'z-index', this._zIndex);\n    } else if (this.zIndexMoving) {\n      if (this.oldZIndex) {\n        this.renderer.setStyle(this.el.nativeElement, 'z-index', this.oldZIndex);\n      } else {\n        this.el.nativeElement.style.removeProperty('z-index');\n      }\n    }\n    if (this.moving) {\n      this.stopped.emit(this.el.nativeElement);\n      // Remove the helper div:\n      this._helperBlock.remove();\n      if (this.needTransform) {\n        if (Position.isIPosition(this.position)) {\n          this.oldTrans.set(this.position);\n        } else {\n          this.oldTrans.reset();\n        }\n        this.transform();\n        this.needTransform = false;\n      }\n      if (this.bounds) {\n        this.edge.emit(this.boundsCheck());\n      }\n      this.moving = false;\n      this.endOffset.emit(this.currTrans.value);\n      if (this.trackPosition) {\n        this.oldTrans.add(this.tempTrans);\n      }\n      this.tempTrans.reset();\n      if (!this.trackPosition) {\n        this.transform();\n      }\n      /** @type {?} */\n      const element = this.getDragEl();\n      this.renderer.removeClass(element, 'ng-dragging');\n      /**\r\n       * Fix performance issue:\r\n       * https://github.com/xieziyu/angular2-draggable/issues/112\r\n       */\n      this.unsubscribeEvents();\n    }\n  }\n  /**\r\n   * @param {?} target\r\n   * @param {?} element\r\n   * @return {?}\r\n   */\n  checkHandleTarget(target, element) {\n    // Checks if the target is the element clicked, then checks each child element of element as well\n    // Ignores button clicks\n    // Ignore elements of type button\n    if (element.tagName === 'BUTTON') {\n      return false;\n    }\n    // If the target was found, return true (handle was found)\n    if (element === target) {\n      return true;\n    }\n    // Recursively iterate this elements children\n    for (let child in element.children) {\n      if (element.children.hasOwnProperty(child)) {\n        if (this.checkHandleTarget(target, element.children[child])) {\n          return true;\n        }\n      }\n    }\n    // Handle was not found in this lineage\n    // Note: return false is ignore unless it is the parent element\n    return false;\n  }\n  /**\r\n   * @param {?} event\r\n   * @return {?}\r\n   */\n  onMouseDown(event) {\n    // 1. skip right click;\n    if (event instanceof MouseEvent && event.button === 2) {\n      return;\n    }\n    // 2. if handle is set, the element can only be moved by handle\n    /** @type {?} */\n    let target = event.target || event.srcElement;\n    if (this.handle !== undefined && !this.checkHandleTarget(target, this.handle)) {\n      return;\n    }\n    // 3. if allow drag is set to false, ignore the mousedown\n    if (this.allowDrag === false) {\n      return;\n    }\n    if (this.preventDefaultEvent) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    this.orignal = Position.fromEvent(event, this.getDragEl());\n    this.pickUp();\n  }\n  /**\r\n   * @param {?} event\r\n   * @return {?}\r\n   */\n  onMouseMove(event) {\n    if (this.moving && this.allowDrag) {\n      if (this.preventDefaultEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      // Add a transparent helper div:\n      this._helperBlock.add();\n      this.moveTo(Position.fromEvent(event, this.getDragEl()));\n    }\n  }\n}\nAngularDraggableDirective.Éµfac = function AngularDraggableDirective_Factory(t) {\n  return new (t || AngularDraggableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2));\n};\nAngularDraggableDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: AngularDraggableDirective,\n  selectors: [[\"\", \"ngDraggable\", \"\"]],\n  hostBindings: function AngularDraggableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"mousedown\", function AngularDraggableDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      })(\"touchstart\", function AngularDraggableDirective_touchstart_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      });\n    }\n  },\n  inputs: {\n    outOfBounds: \"outOfBounds\",\n    gridSize: \"gridSize\",\n    inBounds: \"inBounds\",\n    trackPosition: \"trackPosition\",\n    scale: \"scale\",\n    preventDefaultEvent: \"preventDefaultEvent\",\n    position: \"position\",\n    lockAxis: \"lockAxis\",\n    zIndex: \"zIndex\",\n    ngDraggable: \"ngDraggable\",\n    bounds: \"bounds\",\n    handle: \"handle\",\n    zIndexMoving: \"zIndexMoving\"\n  },\n  outputs: {\n    started: \"started\",\n    stopped: \"stopped\",\n    edge: \"edge\",\n    movingOffset: \"movingOffset\",\n    endOffset: \"endOffset\"\n  },\n  exportAs: [\"ngDraggable\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\nAngularDraggableDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}];\nAngularDraggableDirective.propDecorators = {\n  started: [{\n    type: Output\n  }],\n  stopped: [{\n    type: Output\n  }],\n  edge: [{\n    type: Output\n  }],\n  handle: [{\n    type: Input\n  }],\n  bounds: [{\n    type: Input\n  }],\n  outOfBounds: [{\n    type: Input\n  }],\n  gridSize: [{\n    type: Input\n  }],\n  zIndexMoving: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  inBounds: [{\n    type: Input\n  }],\n  trackPosition: [{\n    type: Input\n  }],\n  scale: [{\n    type: Input\n  }],\n  preventDefaultEvent: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }],\n  lockAxis: [{\n    type: Input\n  }],\n  movingOffset: [{\n    type: Output\n  }],\n  endOffset: [{\n    type: Output\n  }],\n  ngDraggable: [{\n    type: Input\n  }],\n  onMouseDown: [{\n    type: HostListener,\n    args: ['mousedown', ['$event']]\n  }, {\n    type: HostListener,\n    args: ['touchstart', ['$event']]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularDraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngDraggable]',\n      exportAs: 'ngDraggable'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.Renderer2\n    }];\n  }, {\n    started: [{\n      type: Output\n    }],\n    stopped: [{\n      type: Output\n    }],\n    edge: [{\n      type: Output\n    }],\n    outOfBounds: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    inBounds: [{\n      type: Input\n    }],\n    trackPosition: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    preventDefaultEvent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input\n    }],\n    movingOffset: [{\n      type: Output\n    }],\n    endOffset: [{\n      type: Output\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    ngDraggable: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    handle: [{\n      type: Input\n    }],\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n    onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['touchstart', ['$event']]\n    }],\n    zIndexMoving: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass ResizeHandle {\n  /**\r\n   * @param {?} parent\r\n   * @param {?} renderer\r\n   * @param {?} type\r\n   * @param {?} css\r\n   * @param {?} onMouseDown\r\n   */\n  constructor(parent, renderer, type, css, onMouseDown) {\n    this.parent = parent;\n    this.renderer = renderer;\n    this.type = type;\n    this.css = css;\n    this.onMouseDown = onMouseDown;\n    // generate handle div\n    /** @type {?} */\n    let handle = renderer.createElement('div');\n    renderer.addClass(handle, 'ng-resizable-handle');\n    renderer.addClass(handle, css);\n    // add default diagonal for se handle\n    if (type === 'se') {\n      renderer.addClass(handle, 'ng-resizable-diagonal');\n    }\n    // append div to parent\n    if (this.parent) {\n      parent.appendChild(handle);\n    }\n    // create and register event listener\n    this._onResize = event => {\n      onMouseDown(event, this);\n    };\n    handle.addEventListener('mousedown', this._onResize, {\n      passive: false\n    });\n    handle.addEventListener('touchstart', this._onResize, {\n      passive: false\n    });\n    // done\n    this._handle = handle;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  dispose() {\n    this._handle.removeEventListener('mousedown', this._onResize);\n    this._handle.removeEventListener('touchstart', this._onResize);\n    if (this.parent) {\n      this.parent.removeChild(this._handle);\n    }\n    this._handle = null;\n    this._onResize = null;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  get el() {\n    return this._handle;\n  }\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass Size {\n  /**\r\n   * @param {?} width\r\n   * @param {?} height\r\n   */\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  /**\r\n   * @param {?} el\r\n   * @return {?}\r\n   */\n  static getCurrent(el) {\n    /** @type {?} */\n    let size = new Size(0, 0);\n    if (window) {\n      /** @type {?} */\n      const computed = window.getComputedStyle(el);\n      if (computed) {\n        size.width = parseInt(computed.getPropertyValue('width'), 10);\n        size.height = parseInt(computed.getPropertyValue('height'), 10);\n      }\n      return size;\n    } else {\n      console.error('Not Supported!');\n      return null;\n    }\n  }\n  /**\r\n   * @param {?} s\r\n   * @return {?}\r\n   */\n  static copy(s) {\n    return new Size(0, 0).set(s);\n  }\n  /**\r\n   * @template THIS\r\n   * @this {THIS}\r\n   * @param {?} s\r\n   * @return {THIS}\r\n   */\n  set(s) {\n    /** @type {?} */this.width = s.width;\n    /** @type {?} */this.height = s.height;\n    return (/** @type {?} */this\n    );\n  }\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass AngularResizableDirective {\n  /**\r\n   * @param {?} el\r\n   * @param {?} renderer\r\n   */\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n    this._resizable = true;\n    this._handles = {};\n    this._handleType = [];\n    this._handleResizing = null;\n    this._direction = null;\n    this._directionChanged = null;\n    this._aspectRatio = 0;\n    this._containment = null;\n    this._origMousePos = null;\n    /**\r\n     * Original Size and Position\r\n     */\n    this._origSize = null;\n    this._origPos = null;\n    /**\r\n     * Current Size and Position\r\n     */\n    this._currSize = null;\n    this._currPos = null;\n    /**\r\n     * Initial Size and Position\r\n     */\n    this._initSize = null;\n    this._initPos = null;\n    /**\r\n     * Snap to gird\r\n     */\n    this._gridSize = null;\n    this._bounding = null;\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/angular2-draggable/issues/84\r\n     */\n    this._helperBlock = null;\n    this.draggingSub = null;\n    this._adjusted = false;\n    /**\r\n     * Which handles can be used for resizing.\r\n     * \\@example\r\n     * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\r\n     * equals to: [rzHandles] = \"'all'\"\r\n     *\r\n     *\r\n     */\n    this.rzHandles = 'e,s,se';\n    /**\r\n     * Whether the element should be constrained to a specific aspect ratio.\r\n     *  Multiple types supported:\r\n     *  boolean: When set to true, the element will maintain its original aspect ratio.\r\n     *  number: Force the element to maintain a specific aspect ratio during resizing.\r\n     */\n    this.rzAspectRatio = false;\n    /**\r\n     * Constrains resizing to within the bounds of the specified element or region.\r\n     *  Multiple types supported:\r\n     *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\r\n     *            If no element is found, no containment will be set.\r\n     *  Element: The resizable element will be contained to the bounding box of this element.\r\n     *  String: Possible values: \"parent\".\r\n     */\n    this.rzContainment = null;\n    /**\r\n     * Snaps the resizing element to a grid, every x and y pixels.\r\n     * A number for both width and height or an array values like [ x, y ]\r\n     */\n    this.rzGrid = null;\n    /**\r\n     * The minimum width the resizable should be allowed to resize to.\r\n     */\n    this.rzMinWidth = null;\n    /**\r\n     * The minimum height the resizable should be allowed to resize to.\r\n     */\n    this.rzMinHeight = null;\n    /**\r\n     * The maximum width the resizable should be allowed to resize to.\r\n     */\n    this.rzMaxWidth = null;\n    /**\r\n     * The maximum height the resizable should be allowed to resize to.\r\n     */\n    this.rzMaxHeight = null;\n    /**\r\n     * Whether to prevent default event\r\n     */\n    this.preventDefaultEvent = true;\n    /**\r\n     * emitted when start resizing\r\n     */\n    this.rzStart = new EventEmitter();\n    /**\r\n     * emitted when start resizing\r\n     */\n    this.rzResizing = new EventEmitter();\n    /**\r\n     * emitted when stop resizing\r\n     */\n    this.rzStop = new EventEmitter();\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\n  }\n  /**\r\n   * Disables the resizable if set to false.\r\n   * @param {?} v\r\n   * @return {?}\r\n   */\n  set ngResizable(v) {\n    if (v !== undefined && v !== null && v !== '') {\n      this._resizable = !!v;\n      this.updateResizable();\n    }\n  }\n  /**\r\n   * @param {?} changes\r\n   * @return {?}\r\n   */\n  ngOnChanges(changes) {\n    if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\n      this.updateResizable();\n    }\n    if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\n      this.updateAspectRatio();\n    }\n    if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\n      this.updateContainment();\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngOnInit() {\n    this.updateResizable();\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngOnDestroy() {\n    this.removeHandles();\n    this._containment = null;\n    this._helperBlock.dispose();\n    this._helperBlock = null;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  ngAfterViewInit() {\n    /** @type {?} */\n    const elm = this.el.nativeElement;\n    this._initSize = Size.getCurrent(elm);\n    this._initPos = Position.getCurrent(elm);\n    this._currSize = Size.copy(this._initSize);\n    this._currPos = Position.copy(this._initPos);\n    this.updateAspectRatio();\n    this.updateContainment();\n  }\n  /**\r\n   * A method to reset size\r\n   * @return {?}\r\n   */\n  resetSize() {\n    this._currSize = Size.copy(this._initSize);\n    this._currPos = Position.copy(this._initPos);\n    this.doResize();\n  }\n  /**\r\n   * A method to get current status\r\n   * @return {?}\r\n   */\n  getStatus() {\n    if (!this._currPos || !this._currSize) {\n      return null;\n    }\n    return {\n      size: {\n        width: this._currSize.width,\n        height: this._currSize.height\n      },\n      position: {\n        top: this._currPos.y,\n        left: this._currPos.x\n      }\n    };\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  updateResizable() {\n    /** @type {?} */\n    const element = this.el.nativeElement;\n    // clear handles:\n    this.renderer.removeClass(element, 'ng-resizable');\n    this.removeHandles();\n    // create new ones:\n    if (this._resizable) {\n      this.renderer.addClass(element, 'ng-resizable');\n      this.createHandles();\n    }\n  }\n  /**\r\n   * Use it to update aspect\r\n   * @private\r\n   * @return {?}\r\n   */\n  updateAspectRatio() {\n    if (typeof this.rzAspectRatio === 'boolean') {\n      if (this.rzAspectRatio && this._currSize.height) {\n        this._aspectRatio = this._currSize.width / this._currSize.height;\n      } else {\n        this._aspectRatio = 0;\n      }\n    } else {\n      /** @type {?} */\n      let r = Number(this.rzAspectRatio);\n      this._aspectRatio = isNaN(r) ? 0 : r;\n    }\n  }\n  /**\r\n   * Use it to update containment\r\n   * @private\r\n   * @return {?}\r\n   */\n  updateContainment() {\n    if (!this.rzContainment) {\n      this._containment = null;\n      return;\n    }\n    if (typeof this.rzContainment === 'string') {\n      if (this.rzContainment === 'parent') {\n        this._containment = this.el.nativeElement.parentElement;\n      } else {\n        this._containment = document.querySelector(this.rzContainment);\n      }\n    } else {\n      this._containment = this.rzContainment;\n    }\n  }\n  /**\r\n   * Use it to create handle divs\r\n   * @private\r\n   * @return {?}\r\n   */\n  createHandles() {\n    if (!this.rzHandles) {\n      return;\n    }\n    /** @type {?} */\n    let tmpHandleTypes;\n    if (typeof this.rzHandles === 'string') {\n      if (this.rzHandles === 'all') {\n        tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\n      } else {\n        tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\n      }\n      for (let type of tmpHandleTypes) {\n        // default handle theme: ng-resizable-$type.\n        /** @type {?} */\n        let handle = this.createHandleByType(type, `ng-resizable-${type}`);\n        if (handle) {\n          this._handleType.push(type);\n          this._handles[type] = handle;\n        }\n      }\n    } else {\n      tmpHandleTypes = Object.keys(this.rzHandles);\n      for (let type of tmpHandleTypes) {\n        // custom handle theme.\n        /** @type {?} */\n        let handle = this.createHandleByType(type, this.rzHandles[type]);\n        if (handle) {\n          this._handleType.push(type);\n          this._handles[type] = handle;\n        }\n      }\n    }\n  }\n  /**\r\n   * Use it to create a handle\r\n   * @private\r\n   * @param {?} type\r\n   * @param {?} css\r\n   * @return {?}\r\n   */\n  createHandleByType(type, css) {\n    /** @type {?} */\n    const _el = this.el.nativeElement;\n    if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\n      console.error('Invalid handle type:', type);\n      return null;\n    }\n    return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this));\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  removeHandles() {\n    for (let type of this._handleType) {\n      this._handles[type].dispose();\n    }\n    this._handleType = [];\n    this._handles = {};\n  }\n  /**\r\n   * @param {?} event\r\n   * @param {?} handle\r\n   * @return {?}\r\n   */\n  onMouseDown(event, handle) {\n    // skip right click;\n    if (event instanceof MouseEvent && event.button === 2) {\n      return;\n    }\n    if (this.preventDefaultEvent) {\n      // prevent default events\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (!this._handleResizing) {\n      this._origMousePos = Position.fromEvent(event);\n      this.startResize(handle);\n      this.subscribeEvents();\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  subscribeEvents() {\n    this.draggingSub = fromEvent(document, 'mousemove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove( /** @type {?} */event));\n    this.draggingSub.add(fromEvent(document, 'touchmove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove( /** @type {?} */event)));\n    this.draggingSub.add(fromEvent(document, 'mouseup', {\n      passive: false\n    }).subscribe(() => this.onMouseLeave()));\n    // fix for issue #164\n    /** @type {?} */\n    let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    if (!isIEOrEdge) {\n      this.draggingSub.add(fromEvent(document, 'mouseleave', {\n        passive: false\n      }).subscribe(() => this.onMouseLeave()));\n    }\n    this.draggingSub.add(fromEvent(document, 'touchend', {\n      passive: false\n    }).subscribe(() => this.onMouseLeave()));\n    this.draggingSub.add(fromEvent(document, 'touchcancel', {\n      passive: false\n    }).subscribe(() => this.onMouseLeave()));\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  unsubscribeEvents() {\n    this.draggingSub.unsubscribe();\n    this.draggingSub = null;\n  }\n  /**\r\n   * @return {?}\r\n   */\n  onMouseLeave() {\n    if (this._handleResizing) {\n      this.stopResize();\n      this._origMousePos = null;\n      this.unsubscribeEvents();\n    }\n  }\n  /**\r\n   * @param {?} event\r\n   * @return {?}\r\n   */\n  onMouseMove(event) {\n    if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\n      this.resizeTo(Position.fromEvent(event));\n      this.onResizing();\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {?} handle\r\n   * @return {?}\r\n   */\n  startResize(handle) {\n    /** @type {?} */\n    const elm = this.el.nativeElement;\n    this._origSize = Size.getCurrent(elm);\n    this._origPos = Position.getCurrent(elm); // x: left, y: top\n    this._currSize = Size.copy(this._origSize);\n    this._currPos = Position.copy(this._origPos);\n    if (this._containment) {\n      this.getBounding();\n    }\n    this.getGridSize();\n    // Add a transparent helper div:\n    this._helperBlock.add();\n    this._handleResizing = handle;\n    this.updateDirection();\n    this.rzStart.emit(this.getResizingEvent());\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  stopResize() {\n    // Remove the helper div:\n    this._helperBlock.remove();\n    this.rzStop.emit(this.getResizingEvent());\n    this._handleResizing = null;\n    this._direction = null;\n    this._origSize = null;\n    this._origPos = null;\n    if (this._containment) {\n      this.resetBounding();\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  onResizing() {\n    this.rzResizing.emit(this.getResizingEvent());\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  getResizingEvent() {\n    return {\n      host: this.el.nativeElement,\n      handle: this._handleResizing ? this._handleResizing.el : null,\n      size: {\n        width: this._currSize.width,\n        height: this._currSize.height\n      },\n      position: {\n        top: this._currPos.y,\n        left: this._currPos.x\n      },\n      direction: Object.assign({}, this._directionChanged)\n    };\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  updateDirection() {\n    this._direction = {\n      n: !!this._handleResizing.type.match(/n/),\n      s: !!this._handleResizing.type.match(/s/),\n      w: !!this._handleResizing.type.match(/w/),\n      e: !!this._handleResizing.type.match(/e/)\n    };\n    this._directionChanged = Object.assign({}, this._direction);\n    // if aspect ration should be preserved:\n    if (this.rzAspectRatio) {\n      // if north then west (unless ne)\n      if (this._directionChanged.n && !this._directionChanged.e) {\n        this._directionChanged.w = true;\n      }\n      // if south then east (unless sw)\n      if (this._directionChanged.s && !this._directionChanged.w) {\n        this._directionChanged.e = true;\n      }\n      // if east then south (unless ne)\n      if (this._directionChanged.e && !this._directionChanged.n) {\n        this._directionChanged.s = true;\n      }\n      // if west then south (unless nw)\n      if (this._directionChanged.w && !this._directionChanged.n) {\n        this._directionChanged.s = true;\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {?} p\r\n   * @return {?}\r\n   */\n  resizeTo(p) {\n    p.subtract(this._origMousePos);\n    /** @type {?} */\n    const tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\n    /** @type {?} */\n    const tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\n    if (this._direction.n) {\n      // n, ne, nw\n      this._currPos.y = this._origPos.y + tmpY;\n      this._currSize.height = this._origSize.height - tmpY;\n    } else if (this._direction.s) {\n      // s, se, sw\n      this._currSize.height = this._origSize.height + tmpY;\n    }\n    if (this._direction.e) {\n      // e, ne, se\n      this._currSize.width = this._origSize.width + tmpX;\n    } else if (this._direction.w) {\n      // w, nw, sw\n      this._currSize.width = this._origSize.width - tmpX;\n      this._currPos.x = this._origPos.x + tmpX;\n    }\n    this.checkBounds();\n    this.checkSize();\n    this.adjustByRatio();\n    this.doResize();\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  doResize() {\n    /** @type {?} */\n    const container = this.el.nativeElement;\n    if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\n      this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\n    }\n    if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\n      this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\n    }\n    this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\n    this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  adjustByRatio() {\n    if (this._aspectRatio && !this._adjusted) {\n      if (this._direction.e || this._direction.w) {\n        /** @type {?} */\n        const newHeight = Math.floor(this._currSize.width / this._aspectRatio);\n        if (this._direction.n) {\n          this._currPos.y += this._currSize.height - newHeight;\n        }\n        this._currSize.height = newHeight;\n      } else {\n        /** @type {?} */\n        const newWidth = Math.floor(this._aspectRatio * this._currSize.height);\n        if (this._direction.n) {\n          this._currPos.x += this._currSize.width - newWidth;\n        }\n        this._currSize.width = newWidth;\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  checkBounds() {\n    if (this._containment) {\n      /** @type {?} */\n      const maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\n      /** @type {?} */\n      const maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\n      if (this._direction.n && this._currPos.y + this._bounding.translateY < 0) {\n        this._currPos.y = -this._bounding.translateY;\n        this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\n      }\n      if (this._direction.w && this._currPos.x + this._bounding.translateX < 0) {\n        this._currPos.x = -this._bounding.translateX;\n        this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\n      }\n      if (this._currSize.width > maxWidth) {\n        this._currSize.width = maxWidth;\n      }\n      if (this._currSize.height > maxHeight) {\n        this._currSize.height = maxHeight;\n      }\n      /**\r\n       * Fix Issue: Additional check for aspect ratio\r\n       * https://github.com/xieziyu/angular2-draggable/issues/132\r\n       */\n      if (this._aspectRatio) {\n        this._adjusted = false;\n        if ((this._direction.w || this._direction.e) && this._currSize.width / this._aspectRatio >= maxHeight) {\n          /** @type {?} */\n          const newWidth = Math.floor(maxHeight * this._aspectRatio);\n          if (this._direction.w) {\n            this._currPos.x += this._currSize.width - newWidth;\n          }\n          this._currSize.width = newWidth;\n          this._currSize.height = maxHeight;\n          this._adjusted = true;\n        }\n        if ((this._direction.n || this._direction.s) && this._currSize.height * this._aspectRatio >= maxWidth) {\n          /** @type {?} */\n          const newHeight = Math.floor(maxWidth / this._aspectRatio);\n          if (this._direction.n) {\n            this._currPos.y += this._currSize.height - newHeight;\n          }\n          this._currSize.width = maxWidth;\n          this._currSize.height = newHeight;\n          this._adjusted = true;\n        }\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  checkSize() {\n    /** @type {?} */\n    const minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\n    /** @type {?} */\n    const minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\n    if (this._currSize.height < minHeight) {\n      this._currSize.height = minHeight;\n      if (this._direction.n) {\n        this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\n      }\n    }\n    if (this._currSize.width < minWidth) {\n      this._currSize.width = minWidth;\n      if (this._direction.w) {\n        this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\n      }\n    }\n    if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\n      this._currSize.height = this.rzMaxHeight;\n      if (this._direction.n) {\n        this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\n      }\n    }\n    if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\n      this._currSize.width = this.rzMaxWidth;\n      if (this._direction.w) {\n        this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  getBounding() {\n    /** @type {?} */\n    const el = this._containment;\n    /** @type {?} */\n    const computed = window.getComputedStyle(el);\n    if (computed) {\n      /** @type {?} */\n      let p = computed.getPropertyValue('position');\n      /** @type {?} */\n      const nativeEl = window.getComputedStyle(this.el.nativeElement);\n      /** @type {?} */\n      let transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\n      this._bounding = {};\n      this._bounding.width = el.clientWidth;\n      this._bounding.height = el.clientHeight;\n      this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\n      this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\n      this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\n      this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\n      if (transforms.length >= 6) {\n        this._bounding.translateX = parseInt(transforms[4], 10);\n        this._bounding.translateY = parseInt(transforms[5], 10);\n      } else {\n        this._bounding.translateX = 0;\n        this._bounding.translateY = 0;\n      }\n      this._bounding.position = computed.getPropertyValue('position');\n      if (p === 'static') {\n        this.renderer.setStyle(el, 'position', 'relative');\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  resetBounding() {\n    if (this._bounding && this._bounding.position === 'static') {\n      this.renderer.setStyle(this._containment, 'position', 'relative');\n    }\n    this._bounding = null;\n  }\n  /**\r\n   * @private\r\n   * @return {?}\r\n   */\n  getGridSize() {\n    // set default value:\n    this._gridSize = {\n      x: 1,\n      y: 1\n    };\n    if (this.rzGrid) {\n      if (typeof this.rzGrid === 'number') {\n        this._gridSize = {\n          x: this.rzGrid,\n          y: this.rzGrid\n        };\n      } else if (Array.isArray(this.rzGrid)) {\n        this._gridSize = {\n          x: this.rzGrid[0],\n          y: this.rzGrid[1]\n        };\n      }\n    }\n  }\n}\nAngularResizableDirective.Éµfac = function AngularResizableDirective_Factory(t) {\n  return new (t || AngularResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2));\n};\nAngularResizableDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: AngularResizableDirective,\n  selectors: [[\"\", \"ngResizable\", \"\"]],\n  inputs: {\n    rzHandles: \"rzHandles\",\n    rzAspectRatio: \"rzAspectRatio\",\n    rzContainment: \"rzContainment\",\n    rzGrid: \"rzGrid\",\n    rzMinWidth: \"rzMinWidth\",\n    rzMinHeight: \"rzMinHeight\",\n    rzMaxWidth: \"rzMaxWidth\",\n    rzMaxHeight: \"rzMaxHeight\",\n    preventDefaultEvent: \"preventDefaultEvent\",\n    ngResizable: \"ngResizable\"\n  },\n  outputs: {\n    rzStart: \"rzStart\",\n    rzResizing: \"rzResizing\",\n    rzStop: \"rzStop\"\n  },\n  exportAs: [\"ngResizable\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\nAngularResizableDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}];\nAngularResizableDirective.propDecorators = {\n  ngResizable: [{\n    type: Input\n  }],\n  rzHandles: [{\n    type: Input\n  }],\n  rzAspectRatio: [{\n    type: Input\n  }],\n  rzContainment: [{\n    type: Input\n  }],\n  rzGrid: [{\n    type: Input\n  }],\n  rzMinWidth: [{\n    type: Input\n  }],\n  rzMinHeight: [{\n    type: Input\n  }],\n  rzMaxWidth: [{\n    type: Input\n  }],\n  rzMaxHeight: [{\n    type: Input\n  }],\n  preventDefaultEvent: [{\n    type: Input\n  }],\n  rzStart: [{\n    type: Output\n  }],\n  rzResizing: [{\n    type: Output\n  }],\n  rzStop: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngResizable]',\n      exportAs: 'ngResizable'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.Renderer2\n    }];\n  }, {\n    rzHandles: [{\n      type: Input\n    }],\n    rzAspectRatio: [{\n      type: Input\n    }],\n    rzContainment: [{\n      type: Input\n    }],\n    rzGrid: [{\n      type: Input\n    }],\n    rzMinWidth: [{\n      type: Input\n    }],\n    rzMinHeight: [{\n      type: Input\n    }],\n    rzMaxWidth: [{\n      type: Input\n    }],\n    rzMaxHeight: [{\n      type: Input\n    }],\n    preventDefaultEvent: [{\n      type: Input\n    }],\n    rzStart: [{\n      type: Output\n    }],\n    rzResizing: [{\n      type: Output\n    }],\n    rzStop: [{\n      type: Output\n    }],\n    ngResizable: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\nclass AngularDraggableModule {}\nAngularDraggableModule.Éµfac = function AngularDraggableModule_Factory(t) {\n  return new (t || AngularDraggableModule)();\n};\nAngularDraggableModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: AngularDraggableModule\n});\nAngularDraggableModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularDraggableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [AngularDraggableDirective, AngularResizableDirective],\n      exports: [AngularDraggableDirective, AngularResizableDirective]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(AngularDraggableModule, {\n    declarations: [AngularDraggableDirective, AngularResizableDirective],\n    exports: [AngularDraggableDirective, AngularResizableDirective]\n  });\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { AngularDraggableDirective, AngularResizableDirective, AngularDraggableModule, Position };","map":{"version":3,"names":["fromEvent","Directive","ElementRef","Renderer2","Input","Output","HostListener","EventEmitter","NgModule","Éµngcc0","Position","constructor","x","y","e","el","isMouseEvent","clientX","clientY","changedTouches","length","i","target","Object","prototype","toString","apply","indexOf","isIPosition","obj","getCurrent","pos","window","computed","getComputedStyle","parseInt","getPropertyValue","isNaN","console","error","copy","p","set","value","add","subtract","multiply","n","divide","reset","HelperBlock","parent","renderer","_added","helper","createElement","setStyle","_helper","appendChild","remove","removeChild","dispose","AngularDraggableDirective","allowDrag","moving","orignal","oldTrans","tempTrans","currTrans","oldZIndex","_zIndex","needTransform","draggingSub","_helperBlock","started","stopped","edge","outOfBounds","top","right","bottom","left","gridSize","inBounds","trackPosition","scale","preventDefaultEvent","position","lockAxis","movingOffset","endOffset","nativeElement","zIndex","setting","ngDraggable","undefined","element","getDragEl","addClass","putBack","removeClass","ngOnInit","resetPosition","ngOnDestroy","bounds","handle","unsubscribe","ngOnChanges","changes","isFirstChange","currentValue","transform","ngAfterViewInit","boundsCheck","moveTo","emit","translateX","translateY","Math","round","pickUp","style","zIndexMoving","subscribeEvents","document","passive","subscribe","event","onMouseMove","isIEOrEdge","test","navigator","userAgent","unsubscribeEvents","boundary","getBoundingClientRect","elem","result","getCurrentOffset","removeProperty","checkHandleTarget","tagName","child","children","hasOwnProperty","onMouseDown","MouseEvent","button","srcElement","stopPropagation","preventDefault","Éµfac","AngularDraggableDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","type","selectors","hostBindings","AngularDraggableDirective_HostBindings","rf","ctx","ÉµÉµlistener","AngularDraggableDirective_mousedown_HostBindingHandler","$event","AngularDraggableDirective_touchstart_HostBindingHandler","inputs","outputs","exportAs","features","ÉµÉµNgOnChangesFeature","ctorParameters","propDecorators","args","ngDevMode","ÉµsetClassMetadata","selector","ResizeHandle","css","_onResize","addEventListener","_handle","removeEventListener","Size","width","height","size","s","AngularResizableDirective","_resizable","_handles","_handleType","_handleResizing","_direction","_directionChanged","_aspectRatio","_containment","_origMousePos","_origSize","_origPos","_currSize","_currPos","_initSize","_initPos","_gridSize","_bounding","_adjusted","rzHandles","rzAspectRatio","rzContainment","rzGrid","rzMinWidth","rzMinHeight","rzMaxWidth","rzMaxHeight","rzStart","rzResizing","rzStop","ngResizable","v","updateResizable","updateAspectRatio","updateContainment","removeHandles","elm","resetSize","doResize","getStatus","createHandles","r","Number","parentElement","querySelector","tmpHandleTypes","replace","toLowerCase","split","createHandleByType","push","keys","_el","match","bind","startResize","onMouseLeave","stopResize","resizeTo","onResizing","getBounding","getGridSize","updateDirection","getResizingEvent","resetBounding","host","direction","assign","w","tmpX","tmpY","checkBounds","checkSize","adjustByRatio","container","newHeight","floor","newWidth","maxWidth","pr","deltaL","maxHeight","pb","deltaT","minHeight","minWidth","nativeEl","transforms","clientWidth","clientHeight","offsetLeft","offsetTop","Array","isArray","AngularResizableDirective_Factory","AngularDraggableModule","AngularDraggableModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","imports","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"sources":["C:/Users/aj_ph/Documents/Esi/stamper-webui/node_modules/angular2-draggable/__ivy_ngcc__/fesm2015/angular2-draggable.js"],"sourcesContent":["import { fromEvent } from 'rxjs';\r\nimport { Directive, ElementRef, Renderer2, Input, Output, HostListener, EventEmitter, NgModule } from '@angular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as Éµngcc0 from '@angular/core';\r\nclass Position {\r\n    /**\r\n     * @param {?} x\r\n     * @param {?} y\r\n     */\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @param {?=} el\r\n     * @return {?}\r\n     */\r\n    static fromEvent(e, el = null) {\r\n        /**\r\n         * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n         * https://github.com/xieziyu/angular2-draggable/issues/164\r\n         * e instanceof MouseEvent check returns false on IE11\r\n         */\r\n        if (this.isMouseEvent(e)) {\r\n            return new Position(e.clientX, e.clientY);\r\n        }\r\n        else {\r\n            if (el === null || e.changedTouches.length === 1) {\r\n                return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\r\n            }\r\n            /**\r\n             * Fix issue: Multiple phone draggables at the same time\r\n             * https://github.com/xieziyu/angular2-draggable/issues/128\r\n             */\r\n            for (let i = 0; i < e.changedTouches.length; i++) {\r\n                if (e.changedTouches[i].target === el) {\r\n                    return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    static isMouseEvent(e) {\r\n        return Object.prototype.toString.apply(e).indexOf('MouseEvent') === 8;\r\n    }\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    static isIPosition(obj) {\r\n        return !!obj && ('x' in obj) && ('y' in obj);\r\n    }\r\n    /**\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\r\n    static getCurrent(el) {\r\n        /** @type {?} */\r\n        let pos = new Position(0, 0);\r\n        if (window) {\r\n            /** @type {?} */\r\n            const computed = window.getComputedStyle(el);\r\n            if (computed) {\r\n                /** @type {?} */\r\n                let x = parseInt(computed.getPropertyValue('left'), 10);\r\n                /** @type {?} */\r\n                let y = parseInt(computed.getPropertyValue('top'), 10);\r\n                pos.x = isNaN(x) ? 0 : x;\r\n                pos.y = isNaN(y) ? 0 : y;\r\n            }\r\n            return pos;\r\n        }\r\n        else {\r\n            console.error('Not Supported!');\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} p\r\n     * @return {?}\r\n     */\r\n    static copy(p) {\r\n        return new Position(0, 0).set(p);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get value() {\r\n        return { x: this.x, y: this.y };\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} p\r\n     * @return {THIS}\r\n     */\r\n    add(p) {\r\n        (/** @type {?} */ (this)).x += p.x;\r\n        (/** @type {?} */ (this)).y += p.y;\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} p\r\n     * @return {THIS}\r\n     */\r\n    subtract(p) {\r\n        (/** @type {?} */ (this)).x -= p.x;\r\n        (/** @type {?} */ (this)).y -= p.y;\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @param {?} n\r\n     * @return {?}\r\n     */\r\n    multiply(n) {\r\n        this.x *= n;\r\n        this.y *= n;\r\n    }\r\n    /**\r\n     * @param {?} n\r\n     * @return {?}\r\n     */\r\n    divide(n) {\r\n        this.x /= n;\r\n        this.y /= n;\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    reset() {\r\n        (/** @type {?} */ (this)).x = 0;\r\n        (/** @type {?} */ (this)).y = 0;\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} p\r\n     * @return {THIS}\r\n     */\r\n    set(p) {\r\n        (/** @type {?} */ (this)).x = p.x;\r\n        (/** @type {?} */ (this)).y = p.y;\r\n        return (/** @type {?} */ (this));\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass HelperBlock {\r\n    /**\r\n     * @param {?} parent\r\n     * @param {?} renderer\r\n     */\r\n    constructor(parent, renderer) {\r\n        this.parent = parent;\r\n        this.renderer = renderer;\r\n        this._added = false;\r\n        // generate helper div\r\n        /** @type {?} */\r\n        let helper = renderer.createElement('div');\r\n        renderer.setStyle(helper, 'position', 'absolute');\r\n        renderer.setStyle(helper, 'width', '100%');\r\n        renderer.setStyle(helper, 'height', '100%');\r\n        renderer.setStyle(helper, 'background-color', 'transparent');\r\n        renderer.setStyle(helper, 'top', '0');\r\n        renderer.setStyle(helper, 'left', '0');\r\n        // done\r\n        this._helper = helper;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    add() {\r\n        // append div to parent\r\n        if (this.parent && !this._added) {\r\n            this.parent.appendChild(this._helper);\r\n            this._added = true;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    remove() {\r\n        if (this.parent && this._added) {\r\n            this.parent.removeChild(this._helper);\r\n            this._added = false;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    dispose() {\r\n        this._helper = null;\r\n        this._added = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get el() {\r\n        return this._helper;\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularDraggableDirective {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} renderer\r\n     */\r\n    constructor(el, renderer) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.allowDrag = true;\r\n        this.moving = false;\r\n        this.orignal = null;\r\n        this.oldTrans = new Position(0, 0);\r\n        this.tempTrans = new Position(0, 0);\r\n        this.currTrans = new Position(0, 0);\r\n        this.oldZIndex = '';\r\n        this._zIndex = '';\r\n        this.needTransform = false;\r\n        this.draggingSub = null;\r\n        /**\r\n         * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n         * https://github.com/xieziyu/angular2-draggable/issues/84\r\n         */\r\n        this._helperBlock = null;\r\n        this.started = new EventEmitter();\r\n        this.stopped = new EventEmitter();\r\n        this.edge = new EventEmitter();\r\n        /**\r\n         * List of allowed out of bounds edges *\r\n         */\r\n        this.outOfBounds = {\r\n            top: false,\r\n            right: false,\r\n            bottom: false,\r\n            left: false\r\n        };\r\n        /**\r\n         * Round the position to nearest grid\r\n         */\r\n        this.gridSize = 1;\r\n        /**\r\n         * Whether to limit the element stay in the bounds\r\n         */\r\n        this.inBounds = false;\r\n        /**\r\n         * Whether the element should use it's previous drag position on a new drag event.\r\n         */\r\n        this.trackPosition = true;\r\n        /**\r\n         * Input css scale transform of element so translations are correct\r\n         */\r\n        this.scale = 1;\r\n        /**\r\n         * Whether to prevent default event\r\n         */\r\n        this.preventDefaultEvent = false;\r\n        /**\r\n         * Set initial position by offsets\r\n         */\r\n        this.position = { x: 0, y: 0 };\r\n        /**\r\n         * Lock axis: 'x' or 'y'\r\n         */\r\n        this.lockAxis = null;\r\n        /**\r\n         * Emit position offsets when moving\r\n         */\r\n        this.movingOffset = new EventEmitter();\r\n        /**\r\n         * Emit position offsets when put back\r\n         */\r\n        this.endOffset = new EventEmitter();\r\n        this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n    }\r\n    /**\r\n     * Set z-index when not dragging\r\n     * @param {?} setting\r\n     * @return {?}\r\n     */\r\n    set zIndex(setting) {\r\n        this.renderer.setStyle(this.el.nativeElement, 'z-index', setting);\r\n        this._zIndex = setting;\r\n    }\r\n    /**\r\n     * @param {?} setting\r\n     * @return {?}\r\n     */\r\n    set ngDraggable(setting) {\r\n        if (setting !== undefined && setting !== null && setting !== '') {\r\n            this.allowDrag = !!setting;\r\n            /** @type {?} */\r\n            let element = this.getDragEl();\r\n            if (this.allowDrag) {\r\n                this.renderer.addClass(element, 'ng-draggable');\r\n            }\r\n            else {\r\n                this.putBack();\r\n                this.renderer.removeClass(element, 'ng-draggable');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.allowDrag) {\r\n            /** @type {?} */\r\n            let element = this.getDragEl();\r\n            this.renderer.addClass(element, 'ng-draggable');\r\n        }\r\n        this.resetPosition();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.bounds = null;\r\n        this.handle = null;\r\n        this.orignal = null;\r\n        this.oldTrans = null;\r\n        this.tempTrans = null;\r\n        this.currTrans = null;\r\n        this._helperBlock.dispose();\r\n        this._helperBlock = null;\r\n        if (this.draggingSub) {\r\n            this.draggingSub.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (changes['position'] && !changes['position'].isFirstChange()) {\r\n            /** @type {?} */\r\n            let p = changes['position'].currentValue;\r\n            if (!this.moving) {\r\n                if (Position.isIPosition(p)) {\r\n                    this.oldTrans.set(p);\r\n                }\r\n                else {\r\n                    this.oldTrans.reset();\r\n                }\r\n                this.transform();\r\n            }\r\n            else {\r\n                this.needTransform = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (this.inBounds) {\r\n            this.boundsCheck();\r\n            this.oldTrans.add(this.tempTrans);\r\n            this.tempTrans.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getDragEl() {\r\n        return this.handle ? this.handle : this.el.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    resetPosition() {\r\n        if (Position.isIPosition(this.position)) {\r\n            this.oldTrans.set(this.position);\r\n        }\r\n        else {\r\n            this.oldTrans.reset();\r\n        }\r\n        this.tempTrans.reset();\r\n        this.transform();\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} p\r\n     * @return {?}\r\n     */\r\n    moveTo(p) {\r\n        if (this.orignal) {\r\n            p.subtract(this.orignal);\r\n            this.tempTrans.set(p);\r\n            this.tempTrans.divide(this.scale);\r\n            this.transform();\r\n            if (this.bounds) {\r\n                this.edge.emit(this.boundsCheck());\r\n            }\r\n            this.movingOffset.emit(this.currTrans.value);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    transform() {\r\n        /** @type {?} */\r\n        let translateX = this.tempTrans.x + this.oldTrans.x;\r\n        /** @type {?} */\r\n        let translateY = this.tempTrans.y + this.oldTrans.y;\r\n        if (this.lockAxis === 'x') {\r\n            translateX = this.oldTrans.x;\r\n            this.tempTrans.x = 0;\r\n        }\r\n        else if (this.lockAxis === 'y') {\r\n            translateY = this.oldTrans.y;\r\n            this.tempTrans.y = 0;\r\n        }\r\n        // Snap to grid: by grid size\r\n        if (this.gridSize > 1) {\r\n            translateX = Math.round(translateX / this.gridSize) * this.gridSize;\r\n            translateY = Math.round(translateY / this.gridSize) * this.gridSize;\r\n        }\r\n        /** @type {?} */\r\n        let value = `translate(${Math.round(translateX)}px, ${Math.round(translateY)}px)`;\r\n        this.renderer.setStyle(this.el.nativeElement, 'transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-ms-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-moz-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-o-transform', value);\r\n        // save current position\r\n        this.currTrans.x = translateX;\r\n        this.currTrans.y = translateY;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    pickUp() {\r\n        // get old z-index:\r\n        this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : '';\r\n        if (window) {\r\n            this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue('z-index');\r\n        }\r\n        if (this.zIndexMoving) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'z-index', this.zIndexMoving);\r\n        }\r\n        if (!this.moving) {\r\n            this.started.emit(this.el.nativeElement);\r\n            this.moving = true;\r\n            /** @type {?} */\r\n            const element = this.getDragEl();\r\n            this.renderer.addClass(element, 'ng-dragging');\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove((/** @type {?} */ (event))));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove((/** @type {?} */ (event)))));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.putBack()));\r\n        // checking if browser is IE or Edge - https://github.com/xieziyu/angular2-draggable/issues/153\r\n        /** @type {?} */\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.putBack()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.putBack()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.putBack()));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    boundsCheck() {\r\n        if (this.bounds) {\r\n            /** @type {?} */\r\n            let boundary = this.bounds.getBoundingClientRect();\r\n            /** @type {?} */\r\n            let elem = this.el.nativeElement.getBoundingClientRect();\r\n            /** @type {?} */\r\n            let result = {\r\n                'top': this.outOfBounds.top ? true : boundary.top < elem.top,\r\n                'right': this.outOfBounds.right ? true : boundary.right > elem.right,\r\n                'bottom': this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\r\n                'left': this.outOfBounds.left ? true : boundary.left < elem.left\r\n            };\r\n            if (this.inBounds) {\r\n                if (!result.top) {\r\n                    this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\r\n                }\r\n                if (!result.bottom) {\r\n                    this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\r\n                }\r\n                if (!result.right) {\r\n                    this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\r\n                }\r\n                if (!result.left) {\r\n                    this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\r\n                }\r\n                this.transform();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    /**\r\n     * Get current offset\r\n     * @return {?}\r\n     */\r\n    getCurrentOffset() {\r\n        return this.currTrans.value;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    putBack() {\r\n        if (this._zIndex) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'z-index', this._zIndex);\r\n        }\r\n        else if (this.zIndexMoving) {\r\n            if (this.oldZIndex) {\r\n                this.renderer.setStyle(this.el.nativeElement, 'z-index', this.oldZIndex);\r\n            }\r\n            else {\r\n                this.el.nativeElement.style.removeProperty('z-index');\r\n            }\r\n        }\r\n        if (this.moving) {\r\n            this.stopped.emit(this.el.nativeElement);\r\n            // Remove the helper div:\r\n            this._helperBlock.remove();\r\n            if (this.needTransform) {\r\n                if (Position.isIPosition(this.position)) {\r\n                    this.oldTrans.set(this.position);\r\n                }\r\n                else {\r\n                    this.oldTrans.reset();\r\n                }\r\n                this.transform();\r\n                this.needTransform = false;\r\n            }\r\n            if (this.bounds) {\r\n                this.edge.emit(this.boundsCheck());\r\n            }\r\n            this.moving = false;\r\n            this.endOffset.emit(this.currTrans.value);\r\n            if (this.trackPosition) {\r\n                this.oldTrans.add(this.tempTrans);\r\n            }\r\n            this.tempTrans.reset();\r\n            if (!this.trackPosition) {\r\n                this.transform();\r\n            }\r\n            /** @type {?} */\r\n            const element = this.getDragEl();\r\n            this.renderer.removeClass(element, 'ng-dragging');\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} target\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    checkHandleTarget(target, element) {\r\n        // Checks if the target is the element clicked, then checks each child element of element as well\r\n        // Ignores button clicks\r\n        // Ignore elements of type button\r\n        if (element.tagName === 'BUTTON') {\r\n            return false;\r\n        }\r\n        // If the target was found, return true (handle was found)\r\n        if (element === target) {\r\n            return true;\r\n        }\r\n        // Recursively iterate this elements children\r\n        for (let child in element.children) {\r\n            if (element.children.hasOwnProperty(child)) {\r\n                if (this.checkHandleTarget(target, element.children[child])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        // Handle was not found in this lineage\r\n        // Note: return false is ignore unless it is the parent element\r\n        return false;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onMouseDown(event) {\r\n        // 1. skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n        // 2. if handle is set, the element can only be moved by handle\r\n        /** @type {?} */\r\n        let target = event.target || event.srcElement;\r\n        if (this.handle !== undefined && !this.checkHandleTarget(target, this.handle)) {\r\n            return;\r\n        }\r\n        // 3. if allow drag is set to false, ignore the mousedown\r\n        if (this.allowDrag === false) {\r\n            return;\r\n        }\r\n        if (this.preventDefaultEvent) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n        this.orignal = Position.fromEvent(event, this.getDragEl());\r\n        this.pickUp();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onMouseMove(event) {\r\n        if (this.moving && this.allowDrag) {\r\n            if (this.preventDefaultEvent) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n            // Add a transparent helper div:\r\n            this._helperBlock.add();\r\n            this.moveTo(Position.fromEvent(event, this.getDragEl()));\r\n        }\r\n    }\r\n}\r\nAngularDraggableDirective.Éµfac = function AngularDraggableDirective_Factory(t) { return new (t || AngularDraggableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2)); };\r\nAngularDraggableDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: AngularDraggableDirective, selectors: [[\"\", \"ngDraggable\", \"\"]], hostBindings: function AngularDraggableDirective_HostBindings(rf, ctx) { if (rf & 1) {\r\n        Éµngcc0.ÉµÉµlistener(\"mousedown\", function AngularDraggableDirective_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); })(\"touchstart\", function AngularDraggableDirective_touchstart_HostBindingHandler($event) { return ctx.onMouseDown($event); });\r\n    } }, inputs: { outOfBounds: \"outOfBounds\", gridSize: \"gridSize\", inBounds: \"inBounds\", trackPosition: \"trackPosition\", scale: \"scale\", preventDefaultEvent: \"preventDefaultEvent\", position: \"position\", lockAxis: \"lockAxis\", zIndex: \"zIndex\", ngDraggable: \"ngDraggable\", bounds: \"bounds\", handle: \"handle\", zIndexMoving: \"zIndexMoving\" }, outputs: { started: \"started\", stopped: \"stopped\", edge: \"edge\", movingOffset: \"movingOffset\", endOffset: \"endOffset\" }, exportAs: [\"ngDraggable\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\r\n/** @nocollapse */\r\nAngularDraggableDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nAngularDraggableDirective.propDecorators = {\r\n    started: [{ type: Output }],\r\n    stopped: [{ type: Output }],\r\n    edge: [{ type: Output }],\r\n    handle: [{ type: Input }],\r\n    bounds: [{ type: Input }],\r\n    outOfBounds: [{ type: Input }],\r\n    gridSize: [{ type: Input }],\r\n    zIndexMoving: [{ type: Input }],\r\n    zIndex: [{ type: Input }],\r\n    inBounds: [{ type: Input }],\r\n    trackPosition: [{ type: Input }],\r\n    scale: [{ type: Input }],\r\n    preventDefaultEvent: [{ type: Input }],\r\n    position: [{ type: Input }],\r\n    lockAxis: [{ type: Input }],\r\n    movingOffset: [{ type: Output }],\r\n    endOffset: [{ type: Output }],\r\n    ngDraggable: [{ type: Input }],\r\n    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }, { type: HostListener, args: ['touchstart', ['$event'],] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularDraggableDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[ngDraggable]',\r\n                exportAs: 'ngDraggable'\r\n            }]\r\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.Renderer2 }]; }, { started: [{\r\n            type: Output\r\n        }], stopped: [{\r\n            type: Output\r\n        }], edge: [{\r\n            type: Output\r\n        }], outOfBounds: [{\r\n            type: Input\r\n        }], gridSize: [{\r\n            type: Input\r\n        }], inBounds: [{\r\n            type: Input\r\n        }], trackPosition: [{\r\n            type: Input\r\n        }], scale: [{\r\n            type: Input\r\n        }], preventDefaultEvent: [{\r\n            type: Input\r\n        }], position: [{\r\n            type: Input\r\n        }], lockAxis: [{\r\n            type: Input\r\n        }], movingOffset: [{\r\n            type: Output\r\n        }], endOffset: [{\r\n            type: Output\r\n        }], zIndex: [{\r\n            type: Input\r\n        }], ngDraggable: [{\r\n            type: Input\r\n        }], bounds: [{\r\n            type: Input\r\n        }], handle: [{\r\n            type: Input\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onMouseDown: [{\r\n            type: HostListener,\r\n            args: ['mousedown', ['$event']]\r\n        }, {\r\n            type: HostListener,\r\n            args: ['touchstart', ['$event']]\r\n        }], zIndexMoving: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ResizeHandle {\r\n    /**\r\n     * @param {?} parent\r\n     * @param {?} renderer\r\n     * @param {?} type\r\n     * @param {?} css\r\n     * @param {?} onMouseDown\r\n     */\r\n    constructor(parent, renderer, type, css, onMouseDown) {\r\n        this.parent = parent;\r\n        this.renderer = renderer;\r\n        this.type = type;\r\n        this.css = css;\r\n        this.onMouseDown = onMouseDown;\r\n        // generate handle div\r\n        /** @type {?} */\r\n        let handle = renderer.createElement('div');\r\n        renderer.addClass(handle, 'ng-resizable-handle');\r\n        renderer.addClass(handle, css);\r\n        // add default diagonal for se handle\r\n        if (type === 'se') {\r\n            renderer.addClass(handle, 'ng-resizable-diagonal');\r\n        }\r\n        // append div to parent\r\n        if (this.parent) {\r\n            parent.appendChild(handle);\r\n        }\r\n        // create and register event listener\r\n        this._onResize = (event) => { onMouseDown(event, this); };\r\n        handle.addEventListener('mousedown', this._onResize, { passive: false });\r\n        handle.addEventListener('touchstart', this._onResize, { passive: false });\r\n        // done\r\n        this._handle = handle;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    dispose() {\r\n        this._handle.removeEventListener('mousedown', this._onResize);\r\n        this._handle.removeEventListener('touchstart', this._onResize);\r\n        if (this.parent) {\r\n            this.parent.removeChild(this._handle);\r\n        }\r\n        this._handle = null;\r\n        this._onResize = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get el() {\r\n        return this._handle;\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Size {\r\n    /**\r\n     * @param {?} width\r\n     * @param {?} height\r\n     */\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\r\n    static getCurrent(el) {\r\n        /** @type {?} */\r\n        let size = new Size(0, 0);\r\n        if (window) {\r\n            /** @type {?} */\r\n            const computed = window.getComputedStyle(el);\r\n            if (computed) {\r\n                size.width = parseInt(computed.getPropertyValue('width'), 10);\r\n                size.height = parseInt(computed.getPropertyValue('height'), 10);\r\n            }\r\n            return size;\r\n        }\r\n        else {\r\n            console.error('Not Supported!');\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} s\r\n     * @return {?}\r\n     */\r\n    static copy(s) {\r\n        return new Size(0, 0).set(s);\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} s\r\n     * @return {THIS}\r\n     */\r\n    set(s) {\r\n        (/** @type {?} */ (this)).width = s.width;\r\n        (/** @type {?} */ (this)).height = s.height;\r\n        return (/** @type {?} */ (this));\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularResizableDirective {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} renderer\r\n     */\r\n    constructor(el, renderer) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this._resizable = true;\r\n        this._handles = {};\r\n        this._handleType = [];\r\n        this._handleResizing = null;\r\n        this._direction = null;\r\n        this._directionChanged = null;\r\n        this._aspectRatio = 0;\r\n        this._containment = null;\r\n        this._origMousePos = null;\r\n        /**\r\n         * Original Size and Position\r\n         */\r\n        this._origSize = null;\r\n        this._origPos = null;\r\n        /**\r\n         * Current Size and Position\r\n         */\r\n        this._currSize = null;\r\n        this._currPos = null;\r\n        /**\r\n         * Initial Size and Position\r\n         */\r\n        this._initSize = null;\r\n        this._initPos = null;\r\n        /**\r\n         * Snap to gird\r\n         */\r\n        this._gridSize = null;\r\n        this._bounding = null;\r\n        /**\r\n         * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n         * https://github.com/xieziyu/angular2-draggable/issues/84\r\n         */\r\n        this._helperBlock = null;\r\n        this.draggingSub = null;\r\n        this._adjusted = false;\r\n        /**\r\n         * Which handles can be used for resizing.\r\n         * \\@example\r\n         * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\r\n         * equals to: [rzHandles] = \"'all'\"\r\n         *\r\n         *\r\n         */\r\n        this.rzHandles = 'e,s,se';\r\n        /**\r\n         * Whether the element should be constrained to a specific aspect ratio.\r\n         *  Multiple types supported:\r\n         *  boolean: When set to true, the element will maintain its original aspect ratio.\r\n         *  number: Force the element to maintain a specific aspect ratio during resizing.\r\n         */\r\n        this.rzAspectRatio = false;\r\n        /**\r\n         * Constrains resizing to within the bounds of the specified element or region.\r\n         *  Multiple types supported:\r\n         *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\r\n         *            If no element is found, no containment will be set.\r\n         *  Element: The resizable element will be contained to the bounding box of this element.\r\n         *  String: Possible values: \"parent\".\r\n         */\r\n        this.rzContainment = null;\r\n        /**\r\n         * Snaps the resizing element to a grid, every x and y pixels.\r\n         * A number for both width and height or an array values like [ x, y ]\r\n         */\r\n        this.rzGrid = null;\r\n        /**\r\n         * The minimum width the resizable should be allowed to resize to.\r\n         */\r\n        this.rzMinWidth = null;\r\n        /**\r\n         * The minimum height the resizable should be allowed to resize to.\r\n         */\r\n        this.rzMinHeight = null;\r\n        /**\r\n         * The maximum width the resizable should be allowed to resize to.\r\n         */\r\n        this.rzMaxWidth = null;\r\n        /**\r\n         * The maximum height the resizable should be allowed to resize to.\r\n         */\r\n        this.rzMaxHeight = null;\r\n        /**\r\n         * Whether to prevent default event\r\n         */\r\n        this.preventDefaultEvent = true;\r\n        /**\r\n         * emitted when start resizing\r\n         */\r\n        this.rzStart = new EventEmitter();\r\n        /**\r\n         * emitted when start resizing\r\n         */\r\n        this.rzResizing = new EventEmitter();\r\n        /**\r\n         * emitted when stop resizing\r\n         */\r\n        this.rzStop = new EventEmitter();\r\n        this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n    }\r\n    /**\r\n     * Disables the resizable if set to false.\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    set ngResizable(v) {\r\n        if (v !== undefined && v !== null && v !== '') {\r\n            this._resizable = !!v;\r\n            this.updateResizable();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\r\n            this.updateResizable();\r\n        }\r\n        if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\r\n            this.updateAspectRatio();\r\n        }\r\n        if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\r\n            this.updateContainment();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.updateResizable();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.removeHandles();\r\n        this._containment = null;\r\n        this._helperBlock.dispose();\r\n        this._helperBlock = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        /** @type {?} */\r\n        const elm = this.el.nativeElement;\r\n        this._initSize = Size.getCurrent(elm);\r\n        this._initPos = Position.getCurrent(elm);\r\n        this._currSize = Size.copy(this._initSize);\r\n        this._currPos = Position.copy(this._initPos);\r\n        this.updateAspectRatio();\r\n        this.updateContainment();\r\n    }\r\n    /**\r\n     * A method to reset size\r\n     * @return {?}\r\n     */\r\n    resetSize() {\r\n        this._currSize = Size.copy(this._initSize);\r\n        this._currPos = Position.copy(this._initPos);\r\n        this.doResize();\r\n    }\r\n    /**\r\n     * A method to get current status\r\n     * @return {?}\r\n     */\r\n    getStatus() {\r\n        if (!this._currPos || !this._currSize) {\r\n            return null;\r\n        }\r\n        return {\r\n            size: {\r\n                width: this._currSize.width,\r\n                height: this._currSize.height\r\n            },\r\n            position: {\r\n                top: this._currPos.y,\r\n                left: this._currPos.x\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    updateResizable() {\r\n        /** @type {?} */\r\n        const element = this.el.nativeElement;\r\n        // clear handles:\r\n        this.renderer.removeClass(element, 'ng-resizable');\r\n        this.removeHandles();\r\n        // create new ones:\r\n        if (this._resizable) {\r\n            this.renderer.addClass(element, 'ng-resizable');\r\n            this.createHandles();\r\n        }\r\n    }\r\n    /**\r\n     * Use it to update aspect\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    updateAspectRatio() {\r\n        if (typeof this.rzAspectRatio === 'boolean') {\r\n            if (this.rzAspectRatio && this._currSize.height) {\r\n                this._aspectRatio = (this._currSize.width / this._currSize.height);\r\n            }\r\n            else {\r\n                this._aspectRatio = 0;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            let r = Number(this.rzAspectRatio);\r\n            this._aspectRatio = isNaN(r) ? 0 : r;\r\n        }\r\n    }\r\n    /**\r\n     * Use it to update containment\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    updateContainment() {\r\n        if (!this.rzContainment) {\r\n            this._containment = null;\r\n            return;\r\n        }\r\n        if (typeof this.rzContainment === 'string') {\r\n            if (this.rzContainment === 'parent') {\r\n                this._containment = this.el.nativeElement.parentElement;\r\n            }\r\n            else {\r\n                this._containment = document.querySelector(this.rzContainment);\r\n            }\r\n        }\r\n        else {\r\n            this._containment = this.rzContainment;\r\n        }\r\n    }\r\n    /**\r\n     * Use it to create handle divs\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    createHandles() {\r\n        if (!this.rzHandles) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        let tmpHandleTypes;\r\n        if (typeof this.rzHandles === 'string') {\r\n            if (this.rzHandles === 'all') {\r\n                tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\r\n            }\r\n            else {\r\n                tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\r\n            }\r\n            for (let type of tmpHandleTypes) {\r\n                // default handle theme: ng-resizable-$type.\r\n                /** @type {?} */\r\n                let handle = this.createHandleByType(type, `ng-resizable-${type}`);\r\n                if (handle) {\r\n                    this._handleType.push(type);\r\n                    this._handles[type] = handle;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            tmpHandleTypes = Object.keys(this.rzHandles);\r\n            for (let type of tmpHandleTypes) {\r\n                // custom handle theme.\r\n                /** @type {?} */\r\n                let handle = this.createHandleByType(type, this.rzHandles[type]);\r\n                if (handle) {\r\n                    this._handleType.push(type);\r\n                    this._handles[type] = handle;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Use it to create a handle\r\n     * @private\r\n     * @param {?} type\r\n     * @param {?} css\r\n     * @return {?}\r\n     */\r\n    createHandleByType(type, css) {\r\n        /** @type {?} */\r\n        const _el = this.el.nativeElement;\r\n        if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\r\n            console.error('Invalid handle type:', type);\r\n            return null;\r\n        }\r\n        return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    removeHandles() {\r\n        for (let type of this._handleType) {\r\n            this._handles[type].dispose();\r\n        }\r\n        this._handleType = [];\r\n        this._handles = {};\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} handle\r\n     * @return {?}\r\n     */\r\n    onMouseDown(event, handle) {\r\n        // skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n        if (this.preventDefaultEvent) {\r\n            // prevent default events\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n        if (!this._handleResizing) {\r\n            this._origMousePos = Position.fromEvent(event);\r\n            this.startResize(handle);\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove((/** @type {?} */ (event))));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove((/** @type {?} */ (event)))));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        // fix for issue #164\r\n        /** @type {?} */\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onMouseLeave() {\r\n        if (this._handleResizing) {\r\n            this.stopResize();\r\n            this._origMousePos = null;\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onMouseMove(event) {\r\n        if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\r\n            this.resizeTo(Position.fromEvent(event));\r\n            this.onResizing();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} handle\r\n     * @return {?}\r\n     */\r\n    startResize(handle) {\r\n        /** @type {?} */\r\n        const elm = this.el.nativeElement;\r\n        this._origSize = Size.getCurrent(elm);\r\n        this._origPos = Position.getCurrent(elm); // x: left, y: top\r\n        this._currSize = Size.copy(this._origSize);\r\n        this._currPos = Position.copy(this._origPos);\r\n        if (this._containment) {\r\n            this.getBounding();\r\n        }\r\n        this.getGridSize();\r\n        // Add a transparent helper div:\r\n        this._helperBlock.add();\r\n        this._handleResizing = handle;\r\n        this.updateDirection();\r\n        this.rzStart.emit(this.getResizingEvent());\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    stopResize() {\r\n        // Remove the helper div:\r\n        this._helperBlock.remove();\r\n        this.rzStop.emit(this.getResizingEvent());\r\n        this._handleResizing = null;\r\n        this._direction = null;\r\n        this._origSize = null;\r\n        this._origPos = null;\r\n        if (this._containment) {\r\n            this.resetBounding();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    onResizing() {\r\n        this.rzResizing.emit(this.getResizingEvent());\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getResizingEvent() {\r\n        return {\r\n            host: this.el.nativeElement,\r\n            handle: this._handleResizing ? this._handleResizing.el : null,\r\n            size: {\r\n                width: this._currSize.width,\r\n                height: this._currSize.height\r\n            },\r\n            position: {\r\n                top: this._currPos.y,\r\n                left: this._currPos.x\r\n            },\r\n            direction: Object.assign({}, this._directionChanged),\r\n        };\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    updateDirection() {\r\n        this._direction = {\r\n            n: !!this._handleResizing.type.match(/n/),\r\n            s: !!this._handleResizing.type.match(/s/),\r\n            w: !!this._handleResizing.type.match(/w/),\r\n            e: !!this._handleResizing.type.match(/e/)\r\n        };\r\n        this._directionChanged = Object.assign({}, this._direction);\r\n        // if aspect ration should be preserved:\r\n        if (this.rzAspectRatio) {\r\n            // if north then west (unless ne)\r\n            if (this._directionChanged.n && !this._directionChanged.e) {\r\n                this._directionChanged.w = true;\r\n            }\r\n            // if south then east (unless sw)\r\n            if (this._directionChanged.s && !this._directionChanged.w) {\r\n                this._directionChanged.e = true;\r\n            }\r\n            // if east then south (unless ne)\r\n            if (this._directionChanged.e && !this._directionChanged.n) {\r\n                this._directionChanged.s = true;\r\n            }\r\n            // if west then south (unless nw)\r\n            if (this._directionChanged.w && !this._directionChanged.n) {\r\n                this._directionChanged.s = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} p\r\n     * @return {?}\r\n     */\r\n    resizeTo(p) {\r\n        p.subtract(this._origMousePos);\r\n        /** @type {?} */\r\n        const tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\r\n        /** @type {?} */\r\n        const tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\r\n        if (this._direction.n) {\r\n            // n, ne, nw\r\n            this._currPos.y = this._origPos.y + tmpY;\r\n            this._currSize.height = this._origSize.height - tmpY;\r\n        }\r\n        else if (this._direction.s) {\r\n            // s, se, sw\r\n            this._currSize.height = this._origSize.height + tmpY;\r\n        }\r\n        if (this._direction.e) {\r\n            // e, ne, se\r\n            this._currSize.width = this._origSize.width + tmpX;\r\n        }\r\n        else if (this._direction.w) {\r\n            // w, nw, sw\r\n            this._currSize.width = this._origSize.width - tmpX;\r\n            this._currPos.x = this._origPos.x + tmpX;\r\n        }\r\n        this.checkBounds();\r\n        this.checkSize();\r\n        this.adjustByRatio();\r\n        this.doResize();\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    doResize() {\r\n        /** @type {?} */\r\n        const container = this.el.nativeElement;\r\n        if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\r\n            this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\r\n        }\r\n        if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\r\n            this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\r\n        }\r\n        this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\r\n        this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    adjustByRatio() {\r\n        if (this._aspectRatio && !this._adjusted) {\r\n            if (this._direction.e || this._direction.w) {\r\n                /** @type {?} */\r\n                const newHeight = Math.floor(this._currSize.width / this._aspectRatio);\r\n                if (this._direction.n) {\r\n                    this._currPos.y += this._currSize.height - newHeight;\r\n                }\r\n                this._currSize.height = newHeight;\r\n            }\r\n            else {\r\n                /** @type {?} */\r\n                const newWidth = Math.floor(this._aspectRatio * this._currSize.height);\r\n                if (this._direction.n) {\r\n                    this._currPos.x += this._currSize.width - newWidth;\r\n                }\r\n                this._currSize.width = newWidth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    checkBounds() {\r\n        if (this._containment) {\r\n            /** @type {?} */\r\n            const maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\r\n            /** @type {?} */\r\n            const maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\r\n            if (this._direction.n && (this._currPos.y + this._bounding.translateY < 0)) {\r\n                this._currPos.y = -this._bounding.translateY;\r\n                this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\r\n            }\r\n            if (this._direction.w && (this._currPos.x + this._bounding.translateX) < 0) {\r\n                this._currPos.x = -this._bounding.translateX;\r\n                this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\r\n            }\r\n            if (this._currSize.width > maxWidth) {\r\n                this._currSize.width = maxWidth;\r\n            }\r\n            if (this._currSize.height > maxHeight) {\r\n                this._currSize.height = maxHeight;\r\n            }\r\n            /**\r\n             * Fix Issue: Additional check for aspect ratio\r\n             * https://github.com/xieziyu/angular2-draggable/issues/132\r\n             */\r\n            if (this._aspectRatio) {\r\n                this._adjusted = false;\r\n                if ((this._direction.w || this._direction.e) &&\r\n                    (this._currSize.width / this._aspectRatio) >= maxHeight) {\r\n                    /** @type {?} */\r\n                    const newWidth = Math.floor(maxHeight * this._aspectRatio);\r\n                    if (this._direction.w) {\r\n                        this._currPos.x += this._currSize.width - newWidth;\r\n                    }\r\n                    this._currSize.width = newWidth;\r\n                    this._currSize.height = maxHeight;\r\n                    this._adjusted = true;\r\n                }\r\n                if ((this._direction.n || this._direction.s) &&\r\n                    (this._currSize.height * this._aspectRatio) >= maxWidth) {\r\n                    /** @type {?} */\r\n                    const newHeight = Math.floor(maxWidth / this._aspectRatio);\r\n                    if (this._direction.n) {\r\n                        this._currPos.y += this._currSize.height - newHeight;\r\n                    }\r\n                    this._currSize.width = maxWidth;\r\n                    this._currSize.height = newHeight;\r\n                    this._adjusted = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    checkSize() {\r\n        /** @type {?} */\r\n        const minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\r\n        /** @type {?} */\r\n        const minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\r\n        if (this._currSize.height < minHeight) {\r\n            this._currSize.height = minHeight;\r\n            if (this._direction.n) {\r\n                this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\r\n            }\r\n        }\r\n        if (this._currSize.width < minWidth) {\r\n            this._currSize.width = minWidth;\r\n            if (this._direction.w) {\r\n                this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\r\n            }\r\n        }\r\n        if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\r\n            this._currSize.height = this.rzMaxHeight;\r\n            if (this._direction.n) {\r\n                this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\r\n            }\r\n        }\r\n        if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\r\n            this._currSize.width = this.rzMaxWidth;\r\n            if (this._direction.w) {\r\n                this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getBounding() {\r\n        /** @type {?} */\r\n        const el = this._containment;\r\n        /** @type {?} */\r\n        const computed = window.getComputedStyle(el);\r\n        if (computed) {\r\n            /** @type {?} */\r\n            let p = computed.getPropertyValue('position');\r\n            /** @type {?} */\r\n            const nativeEl = window.getComputedStyle(this.el.nativeElement);\r\n            /** @type {?} */\r\n            let transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\r\n            this._bounding = {};\r\n            this._bounding.width = el.clientWidth;\r\n            this._bounding.height = el.clientHeight;\r\n            this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\r\n            this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\r\n            this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\r\n            this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\r\n            if (transforms.length >= 6) {\r\n                this._bounding.translateX = parseInt(transforms[4], 10);\r\n                this._bounding.translateY = parseInt(transforms[5], 10);\r\n            }\r\n            else {\r\n                this._bounding.translateX = 0;\r\n                this._bounding.translateY = 0;\r\n            }\r\n            this._bounding.position = computed.getPropertyValue('position');\r\n            if (p === 'static') {\r\n                this.renderer.setStyle(el, 'position', 'relative');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    resetBounding() {\r\n        if (this._bounding && this._bounding.position === 'static') {\r\n            this.renderer.setStyle(this._containment, 'position', 'relative');\r\n        }\r\n        this._bounding = null;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getGridSize() {\r\n        // set default value:\r\n        this._gridSize = { x: 1, y: 1 };\r\n        if (this.rzGrid) {\r\n            if (typeof this.rzGrid === 'number') {\r\n                this._gridSize = { x: this.rzGrid, y: this.rzGrid };\r\n            }\r\n            else if (Array.isArray(this.rzGrid)) {\r\n                this._gridSize = { x: this.rzGrid[0], y: this.rzGrid[1] };\r\n            }\r\n        }\r\n    }\r\n}\r\nAngularResizableDirective.Éµfac = function AngularResizableDirective_Factory(t) { return new (t || AngularResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2)); };\r\nAngularResizableDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: AngularResizableDirective, selectors: [[\"\", \"ngResizable\", \"\"]], inputs: { rzHandles: \"rzHandles\", rzAspectRatio: \"rzAspectRatio\", rzContainment: \"rzContainment\", rzGrid: \"rzGrid\", rzMinWidth: \"rzMinWidth\", rzMinHeight: \"rzMinHeight\", rzMaxWidth: \"rzMaxWidth\", rzMaxHeight: \"rzMaxHeight\", preventDefaultEvent: \"preventDefaultEvent\", ngResizable: \"ngResizable\" }, outputs: { rzStart: \"rzStart\", rzResizing: \"rzResizing\", rzStop: \"rzStop\" }, exportAs: [\"ngResizable\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\r\n/** @nocollapse */\r\nAngularResizableDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nAngularResizableDirective.propDecorators = {\r\n    ngResizable: [{ type: Input }],\r\n    rzHandles: [{ type: Input }],\r\n    rzAspectRatio: [{ type: Input }],\r\n    rzContainment: [{ type: Input }],\r\n    rzGrid: [{ type: Input }],\r\n    rzMinWidth: [{ type: Input }],\r\n    rzMinHeight: [{ type: Input }],\r\n    rzMaxWidth: [{ type: Input }],\r\n    rzMaxHeight: [{ type: Input }],\r\n    preventDefaultEvent: [{ type: Input }],\r\n    rzStart: [{ type: Output }],\r\n    rzResizing: [{ type: Output }],\r\n    rzStop: [{ type: Output }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularResizableDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[ngResizable]',\r\n                exportAs: 'ngResizable'\r\n            }]\r\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.Renderer2 }]; }, { rzHandles: [{\r\n            type: Input\r\n        }], rzAspectRatio: [{\r\n            type: Input\r\n        }], rzContainment: [{\r\n            type: Input\r\n        }], rzGrid: [{\r\n            type: Input\r\n        }], rzMinWidth: [{\r\n            type: Input\r\n        }], rzMinHeight: [{\r\n            type: Input\r\n        }], rzMaxWidth: [{\r\n            type: Input\r\n        }], rzMaxHeight: [{\r\n            type: Input\r\n        }], preventDefaultEvent: [{\r\n            type: Input\r\n        }], rzStart: [{\r\n            type: Output\r\n        }], rzResizing: [{\r\n            type: Output\r\n        }], rzStop: [{\r\n            type: Output\r\n        }], ngResizable: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularDraggableModule {\r\n}\r\nAngularDraggableModule.Éµfac = function AngularDraggableModule_Factory(t) { return new (t || AngularDraggableModule)(); };\r\nAngularDraggableModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: AngularDraggableModule });\r\nAngularDraggableModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(AngularDraggableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [\r\n                    AngularDraggableDirective,\r\n                    AngularResizableDirective\r\n                ],\r\n                exports: [\r\n                    AngularDraggableDirective,\r\n                    AngularResizableDirective\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(AngularDraggableModule, { declarations: [AngularDraggableDirective, AngularResizableDirective], exports: [AngularDraggableDirective, AngularResizableDirective] }); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { AngularDraggableDirective, AngularResizableDirective, AngularDraggableModule, Position };\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,MAAM;AAChC,SAASC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;;AAErH;AACA;AACA;AACA;AACA,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,MAAMC,QAAQ,CAAC;EACX;AACJ;AACA;AACA;EACIC,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAE;IACd,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACd;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOb,SAAS,CAACc,CAAC,EAAEC,EAAE,GAAG,IAAI,EAAE;IAC3B;AACR;AACA;AACA;AACA;IACQ,IAAI,IAAI,CAACC,YAAY,CAACF,CAAC,CAAC,EAAE;MACtB,OAAO,IAAIJ,QAAQ,CAACI,CAAC,CAACG,OAAO,EAAEH,CAAC,CAACI,OAAO,CAAC;IAC7C,CAAC,MACI;MACD,IAAIH,EAAE,KAAK,IAAI,IAAID,CAAC,CAACK,cAAc,CAACC,MAAM,KAAK,CAAC,EAAE;QAC9C,OAAO,IAAIV,QAAQ,CAACI,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAACF,OAAO,EAAEH,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAACD,OAAO,CAAC;MACjF;MACA;AACZ;AACA;AACA;MACY,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,CAACK,cAAc,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC9C,IAAIP,CAAC,CAACK,cAAc,CAACE,CAAC,CAAC,CAACC,MAAM,KAAKP,EAAE,EAAE;UACnC,OAAO,IAAIL,QAAQ,CAACI,CAAC,CAACK,cAAc,CAACE,CAAC,CAAC,CAACJ,OAAO,EAAEH,CAAC,CAACK,cAAc,CAACE,CAAC,CAAC,CAACH,OAAO,CAAC;QACjF;MACJ;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACI,OAAOF,YAAY,CAACF,CAAC,EAAE;IACnB,OAAOS,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,KAAK,CAACZ,CAAC,CAAC,CAACa,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC;EACzE;EACA;AACJ;AACA;AACA;EACI,OAAOC,WAAW,CAACC,GAAG,EAAE;IACpB,OAAO,CAAC,CAACA,GAAG,IAAK,GAAG,IAAIA,GAAI,IAAK,GAAG,IAAIA,GAAI;EAChD;EACA;AACJ;AACA;AACA;EACI,OAAOC,UAAU,CAACf,EAAE,EAAE;IAClB;IACA,IAAIgB,GAAG,GAAG,IAAIrB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,IAAIsB,MAAM,EAAE;MACR;MACA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,gBAAgB,CAACnB,EAAE,CAAC;MAC5C,IAAIkB,QAAQ,EAAE;QACV;QACA,IAAIrB,CAAC,GAAGuB,QAAQ,CAACF,QAAQ,CAACG,gBAAgB,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;QACvD;QACA,IAAIvB,CAAC,GAAGsB,QAAQ,CAACF,QAAQ,CAACG,gBAAgB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;QACtDL,GAAG,CAACnB,CAAC,GAAGyB,KAAK,CAACzB,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC;QACxBmB,GAAG,CAAClB,CAAC,GAAGwB,KAAK,CAACxB,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC;MAC5B;MACA,OAAOkB,GAAG;IACd,CAAC,MACI;MACDO,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MAC/B,OAAO,IAAI;IACf;EACJ;EACA;AACJ;AACA;AACA;EACI,OAAOC,IAAI,CAACC,CAAC,EAAE;IACX,OAAO,IAAI/B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAACgC,GAAG,CAACD,CAAC,CAAC;EACpC;EACA;AACJ;AACA;EACI,IAAIE,KAAK,GAAG;IACR,OAAO;MAAE/B,CAAC,EAAE,IAAI,CAACA,CAAC;MAAEC,CAAC,EAAE,IAAI,CAACA;IAAE,CAAC;EACnC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI+B,GAAG,CAACH,CAAC,EAAE;IACF,gBAAkB,IAAI,CAAG7B,CAAC,IAAI6B,CAAC,CAAC7B,CAAC;IACjC,gBAAkB,IAAI,CAAGC,CAAC,IAAI4B,CAAC,CAAC5B,CAAC;IAClC,OAAQ,iBAAkB;IAAI;EAClC;EACA;AACJ;AACA;AACA;AACA;AACA;EACIgC,QAAQ,CAACJ,CAAC,EAAE;IACP,gBAAkB,IAAI,CAAG7B,CAAC,IAAI6B,CAAC,CAAC7B,CAAC;IACjC,gBAAkB,IAAI,CAAGC,CAAC,IAAI4B,CAAC,CAAC5B,CAAC;IAClC,OAAQ,iBAAkB;IAAI;EAClC;EACA;AACJ;AACA;AACA;EACIiC,QAAQ,CAACC,CAAC,EAAE;IACR,IAAI,CAACnC,CAAC,IAAImC,CAAC;IACX,IAAI,CAAClC,CAAC,IAAIkC,CAAC;EACf;EACA;AACJ;AACA;AACA;EACIC,MAAM,CAACD,CAAC,EAAE;IACN,IAAI,CAACnC,CAAC,IAAImC,CAAC;IACX,IAAI,CAAClC,CAAC,IAAIkC,CAAC;EACf;EACA;AACJ;AACA;AACA;AACA;EACIE,KAAK,GAAG;IACH,gBAAkB,IAAI,CAAGrC,CAAC,GAAG,CAAC;IAC9B,gBAAkB,IAAI,CAAGC,CAAC,GAAG,CAAC;IAC/B,OAAQ,iBAAkB;IAAI;EAClC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI6B,GAAG,CAACD,CAAC,EAAE;IACF,gBAAkB,IAAI,CAAG7B,CAAC,GAAG6B,CAAC,CAAC7B,CAAC;IAChC,gBAAkB,IAAI,CAAGC,CAAC,GAAG4B,CAAC,CAAC5B,CAAC;IACjC,OAAQ,iBAAkB;IAAI;EAClC;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAMqC,WAAW,CAAC;EACd;AACJ;AACA;AACA;EACIvC,WAAW,CAACwC,MAAM,EAAEC,QAAQ,EAAE;IAC1B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB;IACA;IACA,IAAIC,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC;IAC1CH,QAAQ,CAACI,QAAQ,CAACF,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC;IACjDF,QAAQ,CAACI,QAAQ,CAACF,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;IAC1CF,QAAQ,CAACI,QAAQ,CAACF,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;IAC3CF,QAAQ,CAACI,QAAQ,CAACF,MAAM,EAAE,kBAAkB,EAAE,aAAa,CAAC;IAC5DF,QAAQ,CAACI,QAAQ,CAACF,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC;IACrCF,QAAQ,CAACI,QAAQ,CAACF,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC;IACtC;IACA,IAAI,CAACG,OAAO,GAAGH,MAAM;EACzB;EACA;AACJ;AACA;EACIV,GAAG,GAAG;IACF;IACA,IAAI,IAAI,CAACO,MAAM,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE;MAC7B,IAAI,CAACF,MAAM,CAACO,WAAW,CAAC,IAAI,CAACD,OAAO,CAAC;MACrC,IAAI,CAACJ,MAAM,GAAG,IAAI;IACtB;EACJ;EACA;AACJ;AACA;EACIM,MAAM,GAAG;IACL,IAAI,IAAI,CAACR,MAAM,IAAI,IAAI,CAACE,MAAM,EAAE;MAC5B,IAAI,CAACF,MAAM,CAACS,WAAW,CAAC,IAAI,CAACH,OAAO,CAAC;MACrC,IAAI,CAACJ,MAAM,GAAG,KAAK;IACvB;EACJ;EACA;AACJ;AACA;EACIQ,OAAO,GAAG;IACN,IAAI,CAACJ,OAAO,GAAG,IAAI;IACnB,IAAI,CAACJ,MAAM,GAAG,KAAK;EACvB;EACA;AACJ;AACA;EACI,IAAItC,EAAE,GAAG;IACL,OAAO,IAAI,CAAC0C,OAAO;EACvB;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAMK,yBAAyB,CAAC;EAC5B;AACJ;AACA;AACA;EACInD,WAAW,CAACI,EAAE,EAAEqC,QAAQ,EAAE;IACtB,IAAI,CAACrC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACqC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACW,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,QAAQ,GAAG,IAAIxD,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,CAACyD,SAAS,GAAG,IAAIzD,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,IAAI,CAAC0D,SAAS,GAAG,IAAI1D,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,IAAI,CAAC2D,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACR;AACA;AACA;IACQ,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,OAAO,GAAG,IAAInE,YAAY,EAAE;IACjC,IAAI,CAACoE,OAAO,GAAG,IAAIpE,YAAY,EAAE;IACjC,IAAI,CAACqE,IAAI,GAAG,IAAIrE,YAAY,EAAE;IAC9B;AACR;AACA;IACQ,IAAI,CAACsE,WAAW,GAAG;MACfC,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE;IACV,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB;AACR;AACA;IACQ,IAAI,CAACC,KAAK,GAAG,CAAC;IACd;AACR;AACA;IACQ,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG;MAAE3E,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC9B;AACR;AACA;IACQ,IAAI,CAAC2E,QAAQ,GAAG,IAAI;IACpB;AACR;AACA;IACQ,IAAI,CAACC,YAAY,GAAG,IAAIlF,YAAY,EAAE;IACtC;AACR;AACA;IACQ,IAAI,CAACmF,SAAS,GAAG,IAAInF,YAAY,EAAE;IACnC,IAAI,CAACkE,YAAY,GAAG,IAAIvB,WAAW,CAACnC,EAAE,CAAC4E,aAAa,EAAEvC,QAAQ,CAAC;EACnE;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIwC,MAAM,CAACC,OAAO,EAAE;IAChB,IAAI,CAACzC,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,SAAS,EAAEE,OAAO,CAAC;IACjE,IAAI,CAACvB,OAAO,GAAGuB,OAAO;EAC1B;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAW,CAACD,OAAO,EAAE;IACrB,IAAIA,OAAO,KAAKE,SAAS,IAAIF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,EAAE,EAAE;MAC7D,IAAI,CAAC9B,SAAS,GAAG,CAAC,CAAC8B,OAAO;MAC1B;MACA,IAAIG,OAAO,GAAG,IAAI,CAACC,SAAS,EAAE;MAC9B,IAAI,IAAI,CAAClC,SAAS,EAAE;QAChB,IAAI,CAACX,QAAQ,CAAC8C,QAAQ,CAACF,OAAO,EAAE,cAAc,CAAC;MACnD,CAAC,MACI;QACD,IAAI,CAACG,OAAO,EAAE;QACd,IAAI,CAAC/C,QAAQ,CAACgD,WAAW,CAACJ,OAAO,EAAE,cAAc,CAAC;MACtD;IACJ;EACJ;EACA;AACJ;AACA;EACIK,QAAQ,GAAG;IACP,IAAI,IAAI,CAACtC,SAAS,EAAE;MAChB;MACA,IAAIiC,OAAO,GAAG,IAAI,CAACC,SAAS,EAAE;MAC9B,IAAI,CAAC7C,QAAQ,CAAC8C,QAAQ,CAACF,OAAO,EAAE,cAAc,CAAC;IACnD;IACA,IAAI,CAACM,aAAa,EAAE;EACxB;EACA;AACJ;AACA;EACIC,WAAW,GAAG;IACV,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACxC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACK,YAAY,CAACZ,OAAO,EAAE;IAC3B,IAAI,CAACY,YAAY,GAAG,IAAI;IACxB,IAAI,IAAI,CAACD,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACkC,WAAW,EAAE;IAClC;EACJ;EACA;AACJ;AACA;AACA;EACIC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAAC,UAAU,CAAC,IAAI,CAACA,OAAO,CAAC,UAAU,CAAC,CAACC,aAAa,EAAE,EAAE;MAC7D;MACA,IAAIpE,CAAC,GAAGmE,OAAO,CAAC,UAAU,CAAC,CAACE,YAAY;MACxC,IAAI,CAAC,IAAI,CAAC9C,MAAM,EAAE;QACd,IAAItD,QAAQ,CAACkB,WAAW,CAACa,CAAC,CAAC,EAAE;UACzB,IAAI,CAACyB,QAAQ,CAACxB,GAAG,CAACD,CAAC,CAAC;QACxB,CAAC,MACI;UACD,IAAI,CAACyB,QAAQ,CAACjB,KAAK,EAAE;QACzB;QACA,IAAI,CAAC8D,SAAS,EAAE;MACpB,CAAC,MACI;QACD,IAAI,CAACxC,aAAa,GAAG,IAAI;MAC7B;IACJ;EACJ;EACA;AACJ;AACA;EACIyC,eAAe,GAAG;IACd,IAAI,IAAI,CAAC7B,QAAQ,EAAE;MACf,IAAI,CAAC8B,WAAW,EAAE;MAClB,IAAI,CAAC/C,QAAQ,CAACtB,GAAG,CAAC,IAAI,CAACuB,SAAS,CAAC;MACjC,IAAI,CAACA,SAAS,CAAClB,KAAK,EAAE;IAC1B;EACJ;EACA;AACJ;AACA;AACA;EACIgD,SAAS,GAAG;IACR,OAAO,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG,IAAI,CAAC1F,EAAE,CAAC4E,aAAa;EAC5D;EACA;AACJ;AACA;EACIW,aAAa,GAAG;IACZ,IAAI5F,QAAQ,CAACkB,WAAW,CAAC,IAAI,CAAC2D,QAAQ,CAAC,EAAE;MACrC,IAAI,CAACrB,QAAQ,CAACxB,GAAG,CAAC,IAAI,CAAC6C,QAAQ,CAAC;IACpC,CAAC,MACI;MACD,IAAI,CAACrB,QAAQ,CAACjB,KAAK,EAAE;IACzB;IACA,IAAI,CAACkB,SAAS,CAAClB,KAAK,EAAE;IACtB,IAAI,CAAC8D,SAAS,EAAE;EACpB;EACA;AACJ;AACA;AACA;AACA;EACIG,MAAM,CAACzE,CAAC,EAAE;IACN,IAAI,IAAI,CAACwB,OAAO,EAAE;MACdxB,CAAC,CAACI,QAAQ,CAAC,IAAI,CAACoB,OAAO,CAAC;MACxB,IAAI,CAACE,SAAS,CAACzB,GAAG,CAACD,CAAC,CAAC;MACrB,IAAI,CAAC0B,SAAS,CAACnB,MAAM,CAAC,IAAI,CAACqC,KAAK,CAAC;MACjC,IAAI,CAAC0B,SAAS,EAAE;MAChB,IAAI,IAAI,CAACP,MAAM,EAAE;QACb,IAAI,CAAC5B,IAAI,CAACuC,IAAI,CAAC,IAAI,CAACF,WAAW,EAAE,CAAC;MACtC;MACA,IAAI,CAACxB,YAAY,CAAC0B,IAAI,CAAC,IAAI,CAAC/C,SAAS,CAACzB,KAAK,CAAC;IAChD;EACJ;EACA;AACJ;AACA;AACA;EACIoE,SAAS,GAAG;IACR;IACA,IAAIK,UAAU,GAAG,IAAI,CAACjD,SAAS,CAACvD,CAAC,GAAG,IAAI,CAACsD,QAAQ,CAACtD,CAAC;IACnD;IACA,IAAIyG,UAAU,GAAG,IAAI,CAAClD,SAAS,CAACtD,CAAC,GAAG,IAAI,CAACqD,QAAQ,CAACrD,CAAC;IACnD,IAAI,IAAI,CAAC2E,QAAQ,KAAK,GAAG,EAAE;MACvB4B,UAAU,GAAG,IAAI,CAAClD,QAAQ,CAACtD,CAAC;MAC5B,IAAI,CAACuD,SAAS,CAACvD,CAAC,GAAG,CAAC;IACxB,CAAC,MACI,IAAI,IAAI,CAAC4E,QAAQ,KAAK,GAAG,EAAE;MAC5B6B,UAAU,GAAG,IAAI,CAACnD,QAAQ,CAACrD,CAAC;MAC5B,IAAI,CAACsD,SAAS,CAACtD,CAAC,GAAG,CAAC;IACxB;IACA;IACA,IAAI,IAAI,CAACqE,QAAQ,GAAG,CAAC,EAAE;MACnBkC,UAAU,GAAGE,IAAI,CAACC,KAAK,CAACH,UAAU,GAAG,IAAI,CAAClC,QAAQ,CAAC,GAAG,IAAI,CAACA,QAAQ;MACnEmC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACF,UAAU,GAAG,IAAI,CAACnC,QAAQ,CAAC,GAAG,IAAI,CAACA,QAAQ;IACvE;IACA;IACA,IAAIvC,KAAK,GAAI,aAAY2E,IAAI,CAACC,KAAK,CAACH,UAAU,CAAE,OAAME,IAAI,CAACC,KAAK,CAACF,UAAU,CAAE,KAAI;IACjF,IAAI,CAACjE,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,WAAW,EAAEhD,KAAK,CAAC;IACjE,IAAI,CAACS,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,mBAAmB,EAAEhD,KAAK,CAAC;IACzE,IAAI,CAACS,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,eAAe,EAAEhD,KAAK,CAAC;IACrE,IAAI,CAACS,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,gBAAgB,EAAEhD,KAAK,CAAC;IACtE,IAAI,CAACS,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,cAAc,EAAEhD,KAAK,CAAC;IACpE;IACA,IAAI,CAACyB,SAAS,CAACxD,CAAC,GAAGwG,UAAU;IAC7B,IAAI,CAAChD,SAAS,CAACvD,CAAC,GAAGwG,UAAU;EACjC;EACA;AACJ;AACA;AACA;EACIG,MAAM,GAAG;IACL;IACA,IAAI,CAACnD,SAAS,GAAG,IAAI,CAACtD,EAAE,CAAC4E,aAAa,CAAC8B,KAAK,CAAC7B,MAAM,GAAG,IAAI,CAAC7E,EAAE,CAAC4E,aAAa,CAAC8B,KAAK,CAAC7B,MAAM,GAAG,EAAE;IAC7F,IAAI5D,MAAM,EAAE;MACR,IAAI,CAACqC,SAAS,GAAGrC,MAAM,CAACE,gBAAgB,CAAC,IAAI,CAACnB,EAAE,CAAC4E,aAAa,EAAE,IAAI,CAAC,CAACvD,gBAAgB,CAAC,SAAS,CAAC;IACrG;IACA,IAAI,IAAI,CAACsF,YAAY,EAAE;MACnB,IAAI,CAACtE,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC+B,YAAY,CAAC;IAC/E;IACA,IAAI,CAAC,IAAI,CAAC1D,MAAM,EAAE;MACd,IAAI,CAACU,OAAO,CAACyC,IAAI,CAAC,IAAI,CAACpG,EAAE,CAAC4E,aAAa,CAAC;MACxC,IAAI,CAAC3B,MAAM,GAAG,IAAI;MAClB;MACA,MAAMgC,OAAO,GAAG,IAAI,CAACC,SAAS,EAAE;MAChC,IAAI,CAAC7C,QAAQ,CAAC8C,QAAQ,CAACF,OAAO,EAAE,aAAa,CAAC;MAC9C;AACZ;AACA;AACA;MACY,IAAI,CAAC2B,eAAe,EAAE;IAC1B;EACJ;EACA;AACJ;AACA;AACA;EACIA,eAAe,GAAG;IACd,IAAI,CAACnD,WAAW,GAAGxE,SAAS,CAAC4H,QAAQ,EAAE,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,EAAE,gBAAkBD,KAAK,CAAG,CAAC;IACxI,IAAI,CAACvD,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,EAAE,gBAAkBD,KAAK,CAAG,CAAC,CAAC;IAC3I,IAAI,CAACvD,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,SAAS,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAAC3B,OAAO,EAAE,CAAC,CAAC;IACxG;IACA;IACA,IAAI8B,UAAU,GAAG,mBAAmB,CAACC,IAAI,CAAClG,MAAM,CAACmG,SAAS,CAACC,SAAS,CAAC;IACrE,IAAI,CAACH,UAAU,EAAE;MACb,IAAI,CAACzD,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,YAAY,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAAC3B,OAAO,EAAE,CAAC,CAAC;IAC/G;IACA,IAAI,CAAC3B,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,UAAU,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAAC3B,OAAO,EAAE,CAAC,CAAC;IACzG,IAAI,CAAC3B,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,aAAa,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAAC3B,OAAO,EAAE,CAAC,CAAC;EAChH;EACA;AACJ;AACA;AACA;EACIkC,iBAAiB,GAAG;IAChB,IAAI,CAAC7D,WAAW,CAACkC,WAAW,EAAE;IAC9B,IAAI,CAAClC,WAAW,GAAG,IAAI;EAC3B;EACA;AACJ;AACA;EACIyC,WAAW,GAAG;IACV,IAAI,IAAI,CAACT,MAAM,EAAE;MACb;MACA,IAAI8B,QAAQ,GAAG,IAAI,CAAC9B,MAAM,CAAC+B,qBAAqB,EAAE;MAClD;MACA,IAAIC,IAAI,GAAG,IAAI,CAACzH,EAAE,CAAC4E,aAAa,CAAC4C,qBAAqB,EAAE;MACxD;MACA,IAAIE,MAAM,GAAG;QACT,KAAK,EAAE,IAAI,CAAC5D,WAAW,CAACC,GAAG,GAAG,IAAI,GAAGwD,QAAQ,CAACxD,GAAG,GAAG0D,IAAI,CAAC1D,GAAG;QAC5D,OAAO,EAAE,IAAI,CAACD,WAAW,CAACE,KAAK,GAAG,IAAI,GAAGuD,QAAQ,CAACvD,KAAK,GAAGyD,IAAI,CAACzD,KAAK;QACpE,QAAQ,EAAE,IAAI,CAACF,WAAW,CAACG,MAAM,GAAG,IAAI,GAAGsD,QAAQ,CAACtD,MAAM,GAAGwD,IAAI,CAACxD,MAAM;QACxE,MAAM,EAAE,IAAI,CAACH,WAAW,CAACI,IAAI,GAAG,IAAI,GAAGqD,QAAQ,CAACrD,IAAI,GAAGuD,IAAI,CAACvD;MAChE,CAAC;MACD,IAAI,IAAI,CAACE,QAAQ,EAAE;QACf,IAAI,CAACsD,MAAM,CAAC3D,GAAG,EAAE;UACb,IAAI,CAACX,SAAS,CAACtD,CAAC,IAAI,CAAC2H,IAAI,CAAC1D,GAAG,GAAGwD,QAAQ,CAACxD,GAAG,IAAI,IAAI,CAACO,KAAK;QAC9D;QACA,IAAI,CAACoD,MAAM,CAACzD,MAAM,EAAE;UAChB,IAAI,CAACb,SAAS,CAACtD,CAAC,IAAI,CAAC2H,IAAI,CAACxD,MAAM,GAAGsD,QAAQ,CAACtD,MAAM,IAAI,IAAI,CAACK,KAAK;QACpE;QACA,IAAI,CAACoD,MAAM,CAAC1D,KAAK,EAAE;UACf,IAAI,CAACZ,SAAS,CAACvD,CAAC,IAAI,CAAC4H,IAAI,CAACzD,KAAK,GAAGuD,QAAQ,CAACvD,KAAK,IAAI,IAAI,CAACM,KAAK;QAClE;QACA,IAAI,CAACoD,MAAM,CAACxD,IAAI,EAAE;UACd,IAAI,CAACd,SAAS,CAACvD,CAAC,IAAI,CAAC4H,IAAI,CAACvD,IAAI,GAAGqD,QAAQ,CAACrD,IAAI,IAAI,IAAI,CAACI,KAAK;QAChE;QACA,IAAI,CAAC0B,SAAS,EAAE;MACpB;MACA,OAAO0B,MAAM;IACjB;EACJ;EACA;AACJ;AACA;AACA;EACIC,gBAAgB,GAAG;IACf,OAAO,IAAI,CAACtE,SAAS,CAACzB,KAAK;EAC/B;EACA;AACJ;AACA;AACA;EACIwD,OAAO,GAAG;IACN,IAAI,IAAI,CAAC7B,OAAO,EAAE;MACd,IAAI,CAAClB,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,SAAS,EAAE,IAAI,CAACrB,OAAO,CAAC;IAC1E,CAAC,MACI,IAAI,IAAI,CAACoD,YAAY,EAAE;MACxB,IAAI,IAAI,CAACrD,SAAS,EAAE;QAChB,IAAI,CAACjB,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACzC,EAAE,CAAC4E,aAAa,EAAE,SAAS,EAAE,IAAI,CAACtB,SAAS,CAAC;MAC5E,CAAC,MACI;QACD,IAAI,CAACtD,EAAE,CAAC4E,aAAa,CAAC8B,KAAK,CAACkB,cAAc,CAAC,SAAS,CAAC;MACzD;IACJ;IACA,IAAI,IAAI,CAAC3E,MAAM,EAAE;MACb,IAAI,CAACW,OAAO,CAACwC,IAAI,CAAC,IAAI,CAACpG,EAAE,CAAC4E,aAAa,CAAC;MACxC;MACA,IAAI,CAAClB,YAAY,CAACd,MAAM,EAAE;MAC1B,IAAI,IAAI,CAACY,aAAa,EAAE;QACpB,IAAI7D,QAAQ,CAACkB,WAAW,CAAC,IAAI,CAAC2D,QAAQ,CAAC,EAAE;UACrC,IAAI,CAACrB,QAAQ,CAACxB,GAAG,CAAC,IAAI,CAAC6C,QAAQ,CAAC;QACpC,CAAC,MACI;UACD,IAAI,CAACrB,QAAQ,CAACjB,KAAK,EAAE;QACzB;QACA,IAAI,CAAC8D,SAAS,EAAE;QAChB,IAAI,CAACxC,aAAa,GAAG,KAAK;MAC9B;MACA,IAAI,IAAI,CAACiC,MAAM,EAAE;QACb,IAAI,CAAC5B,IAAI,CAACuC,IAAI,CAAC,IAAI,CAACF,WAAW,EAAE,CAAC;MACtC;MACA,IAAI,CAACjD,MAAM,GAAG,KAAK;MACnB,IAAI,CAAC0B,SAAS,CAACyB,IAAI,CAAC,IAAI,CAAC/C,SAAS,CAACzB,KAAK,CAAC;MACzC,IAAI,IAAI,CAACyC,aAAa,EAAE;QACpB,IAAI,CAAClB,QAAQ,CAACtB,GAAG,CAAC,IAAI,CAACuB,SAAS,CAAC;MACrC;MACA,IAAI,CAACA,SAAS,CAAClB,KAAK,EAAE;MACtB,IAAI,CAAC,IAAI,CAACmC,aAAa,EAAE;QACrB,IAAI,CAAC2B,SAAS,EAAE;MACpB;MACA;MACA,MAAMf,OAAO,GAAG,IAAI,CAACC,SAAS,EAAE;MAChC,IAAI,CAAC7C,QAAQ,CAACgD,WAAW,CAACJ,OAAO,EAAE,aAAa,CAAC;MACjD;AACZ;AACA;AACA;MACY,IAAI,CAACqC,iBAAiB,EAAE;IAC5B;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIO,iBAAiB,CAACtH,MAAM,EAAE0E,OAAO,EAAE;IAC/B;IACA;IACA;IACA,IAAIA,OAAO,CAAC6C,OAAO,KAAK,QAAQ,EAAE;MAC9B,OAAO,KAAK;IAChB;IACA;IACA,IAAI7C,OAAO,KAAK1E,MAAM,EAAE;MACpB,OAAO,IAAI;IACf;IACA;IACA,KAAK,IAAIwH,KAAK,IAAI9C,OAAO,CAAC+C,QAAQ,EAAE;MAChC,IAAI/C,OAAO,CAAC+C,QAAQ,CAACC,cAAc,CAACF,KAAK,CAAC,EAAE;QACxC,IAAI,IAAI,CAACF,iBAAiB,CAACtH,MAAM,EAAE0E,OAAO,CAAC+C,QAAQ,CAACD,KAAK,CAAC,CAAC,EAAE;UACzD,OAAO,IAAI;QACf;MACJ;IACJ;IACA;IACA;IACA,OAAO,KAAK;EAChB;EACA;AACJ;AACA;AACA;EACIG,WAAW,CAAClB,KAAK,EAAE;IACf;IACA,IAAIA,KAAK,YAAYmB,UAAU,IAAInB,KAAK,CAACoB,MAAM,KAAK,CAAC,EAAE;MACnD;IACJ;IACA;IACA;IACA,IAAI7H,MAAM,GAAGyG,KAAK,CAACzG,MAAM,IAAIyG,KAAK,CAACqB,UAAU;IAC7C,IAAI,IAAI,CAAC3C,MAAM,KAAKV,SAAS,IAAI,CAAC,IAAI,CAAC6C,iBAAiB,CAACtH,MAAM,EAAE,IAAI,CAACmF,MAAM,CAAC,EAAE;MAC3E;IACJ;IACA;IACA,IAAI,IAAI,CAAC1C,SAAS,KAAK,KAAK,EAAE;MAC1B;IACJ;IACA,IAAI,IAAI,CAACuB,mBAAmB,EAAE;MAC1ByC,KAAK,CAACsB,eAAe,EAAE;MACvBtB,KAAK,CAACuB,cAAc,EAAE;IAC1B;IACA,IAAI,CAACrF,OAAO,GAAGvD,QAAQ,CAACV,SAAS,CAAC+H,KAAK,EAAE,IAAI,CAAC9B,SAAS,EAAE,CAAC;IAC1D,IAAI,CAACuB,MAAM,EAAE;EACjB;EACA;AACJ;AACA;AACA;EACIQ,WAAW,CAACD,KAAK,EAAE;IACf,IAAI,IAAI,CAAC/D,MAAM,IAAI,IAAI,CAACD,SAAS,EAAE;MAC/B,IAAI,IAAI,CAACuB,mBAAmB,EAAE;QAC1ByC,KAAK,CAACsB,eAAe,EAAE;QACvBtB,KAAK,CAACuB,cAAc,EAAE;MAC1B;MACA;MACA,IAAI,CAAC7E,YAAY,CAAC7B,GAAG,EAAE;MACvB,IAAI,CAACsE,MAAM,CAACxG,QAAQ,CAACV,SAAS,CAAC+H,KAAK,EAAE,IAAI,CAAC9B,SAAS,EAAE,CAAC,CAAC;IAC5D;EACJ;AACJ;AACAnC,yBAAyB,CAACyF,IAAI,GAAG,SAASC,iCAAiC,CAACC,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAI3F,yBAAyB,EAAErD,MAAM,CAACiJ,iBAAiB,CAACjJ,MAAM,CAACP,UAAU,CAAC,EAAEO,MAAM,CAACiJ,iBAAiB,CAACjJ,MAAM,CAACN,SAAS,CAAC,CAAC;AAAE,CAAC;AACxN2D,yBAAyB,CAAC6F,IAAI,GAAG,aAAclJ,MAAM,CAACmJ,iBAAiB,CAAC;EAAEC,IAAI,EAAE/F,yBAAyB;EAAEgG,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;EAAEC,YAAY,EAAE,SAASC,sCAAsC,CAACC,EAAE,EAAEC,GAAG,EAAE;IAAE,IAAID,EAAE,GAAG,CAAC,EAAE;MAC9NxJ,MAAM,CAAC0J,UAAU,CAAC,WAAW,EAAE,SAASC,sDAAsD,CAACC,MAAM,EAAE;QAAE,OAAOH,GAAG,CAACjB,WAAW,CAACoB,MAAM,CAAC;MAAE,CAAC,CAAC,CAAC,YAAY,EAAE,SAASC,uDAAuD,CAACD,MAAM,EAAE;QAAE,OAAOH,GAAG,CAACjB,WAAW,CAACoB,MAAM,CAAC;MAAE,CAAC,CAAC;IAC3Q;EAAE,CAAC;EAAEE,MAAM,EAAE;IAAE1F,WAAW,EAAE,aAAa;IAAEK,QAAQ,EAAE,UAAU;IAAEC,QAAQ,EAAE,UAAU;IAAEC,aAAa,EAAE,eAAe;IAAEC,KAAK,EAAE,OAAO;IAAEC,mBAAmB,EAAE,qBAAqB;IAAEC,QAAQ,EAAE,UAAU;IAAEC,QAAQ,EAAE,UAAU;IAAEI,MAAM,EAAE,QAAQ;IAAEE,WAAW,EAAE,aAAa;IAAEU,MAAM,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEiB,YAAY,EAAE;EAAe,CAAC;EAAE8C,OAAO,EAAE;IAAE9F,OAAO,EAAE,SAAS;IAAEC,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE,MAAM;IAAEa,YAAY,EAAE,cAAc;IAAEC,SAAS,EAAE;EAAY,CAAC;EAAE+E,QAAQ,EAAE,CAAC,aAAa,CAAC;EAAEC,QAAQ,EAAE,CAACjK,MAAM,CAACkK,oBAAoB;AAAE,CAAC,CAAC;AACnhB;AACA7G,yBAAyB,CAAC8G,cAAc,GAAG,MAAM,CAC7C;EAAEf,IAAI,EAAE3J;AAAW,CAAC,EACpB;EAAE2J,IAAI,EAAE1J;AAAU,CAAC,CACtB;AACD2D,yBAAyB,CAAC+G,cAAc,GAAG;EACvCnG,OAAO,EAAE,CAAC;IAAEmF,IAAI,EAAExJ;EAAO,CAAC,CAAC;EAC3BsE,OAAO,EAAE,CAAC;IAAEkF,IAAI,EAAExJ;EAAO,CAAC,CAAC;EAC3BuE,IAAI,EAAE,CAAC;IAAEiF,IAAI,EAAExJ;EAAO,CAAC,CAAC;EACxBoG,MAAM,EAAE,CAAC;IAAEoD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACzBoG,MAAM,EAAE,CAAC;IAAEqD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACzByE,WAAW,EAAE,CAAC;IAAEgF,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC9B8E,QAAQ,EAAE,CAAC;IAAE2E,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC3BsH,YAAY,EAAE,CAAC;IAAEmC,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC/BwF,MAAM,EAAE,CAAC;IAAEiE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACzB+E,QAAQ,EAAE,CAAC;IAAE0E,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC3BgF,aAAa,EAAE,CAAC;IAAEyE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAChCiF,KAAK,EAAE,CAAC;IAAEwE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACxBkF,mBAAmB,EAAE,CAAC;IAAEuE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACtCmF,QAAQ,EAAE,CAAC;IAAEsE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC3BoF,QAAQ,EAAE,CAAC;IAAEqE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC3BqF,YAAY,EAAE,CAAC;IAAEoE,IAAI,EAAExJ;EAAO,CAAC,CAAC;EAChCqF,SAAS,EAAE,CAAC;IAAEmE,IAAI,EAAExJ;EAAO,CAAC,CAAC;EAC7ByF,WAAW,EAAE,CAAC;IAAE+D,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC9B6I,WAAW,EAAE,CAAC;IAAEY,IAAI,EAAEvJ,YAAY;IAAEwK,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;EAAG,CAAC,EAAE;IAAEjB,IAAI,EAAEvJ,YAAY;IAAEwK,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;EAAG,CAAC;AACrI,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKtK,MAAM,CAACuK,iBAAiB,CAAClH,yBAAyB,EAAE,CAAC;IAC/G+F,IAAI,EAAE5J,SAAS;IACf6K,IAAI,EAAE,CAAC;MACCG,QAAQ,EAAE,eAAe;MACzBR,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEZ,IAAI,EAAEpJ,MAAM,CAACP;IAAW,CAAC,EAAE;MAAE2J,IAAI,EAAEpJ,MAAM,CAACN;IAAU,CAAC,CAAC;EAAE,CAAC,EAAE;IAAEuE,OAAO,EAAE,CAAC;MAC3FmF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEsE,OAAO,EAAE,CAAC;MACVkF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEuE,IAAI,EAAE,CAAC;MACPiF,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEwE,WAAW,EAAE,CAAC;MACdgF,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE8E,QAAQ,EAAE,CAAC;MACX2E,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE+E,QAAQ,EAAE,CAAC;MACX0E,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEgF,aAAa,EAAE,CAAC;MAChByE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEiF,KAAK,EAAE,CAAC;MACRwE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEkF,mBAAmB,EAAE,CAAC;MACtBuE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACXsE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEoF,QAAQ,EAAE,CAAC;MACXqE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEqF,YAAY,EAAE,CAAC;MACfoE,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEqF,SAAS,EAAE,CAAC;MACZmE,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEuF,MAAM,EAAE,CAAC;MACTiE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE0F,WAAW,EAAE,CAAC;MACd+D,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEoG,MAAM,EAAE,CAAC;MACTqD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEqG,MAAM,EAAE,CAAC;MACToD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IACN;AACJ;AACA;AACA;IACI6I,WAAW,EAAE,CAAC;MACNY,IAAI,EAAEvJ,YAAY;MAClBwK,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;IAClC,CAAC,EAAE;MACCjB,IAAI,EAAEvJ,YAAY;MAClBwK,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;IACnC,CAAC,CAAC;IAAEpD,YAAY,EAAE,CAAC;MACfmC,IAAI,EAAEzJ;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA,MAAM8K,YAAY,CAAC;EACf;AACJ;AACA;AACA;AACA;AACA;AACA;EACIvK,WAAW,CAACwC,MAAM,EAAEC,QAAQ,EAAEyG,IAAI,EAAEsB,GAAG,EAAElC,WAAW,EAAE;IAClD,IAAI,CAAC9F,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACyG,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACsB,GAAG,GAAGA,GAAG;IACd,IAAI,CAAClC,WAAW,GAAGA,WAAW;IAC9B;IACA;IACA,IAAIxC,MAAM,GAAGrD,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC;IAC1CH,QAAQ,CAAC8C,QAAQ,CAACO,MAAM,EAAE,qBAAqB,CAAC;IAChDrD,QAAQ,CAAC8C,QAAQ,CAACO,MAAM,EAAE0E,GAAG,CAAC;IAC9B;IACA,IAAItB,IAAI,KAAK,IAAI,EAAE;MACfzG,QAAQ,CAAC8C,QAAQ,CAACO,MAAM,EAAE,uBAAuB,CAAC;IACtD;IACA;IACA,IAAI,IAAI,CAACtD,MAAM,EAAE;MACbA,MAAM,CAACO,WAAW,CAAC+C,MAAM,CAAC;IAC9B;IACA;IACA,IAAI,CAAC2E,SAAS,GAAIrD,KAAK,IAAK;MAAEkB,WAAW,CAAClB,KAAK,EAAE,IAAI,CAAC;IAAE,CAAC;IACzDtB,MAAM,CAAC4E,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACD,SAAS,EAAE;MAAEvD,OAAO,EAAE;IAAM,CAAC,CAAC;IACxEpB,MAAM,CAAC4E,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACD,SAAS,EAAE;MAAEvD,OAAO,EAAE;IAAM,CAAC,CAAC;IACzE;IACA,IAAI,CAACyD,OAAO,GAAG7E,MAAM;EACzB;EACA;AACJ;AACA;EACI5C,OAAO,GAAG;IACN,IAAI,CAACyH,OAAO,CAACC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACH,SAAS,CAAC;IAC7D,IAAI,CAACE,OAAO,CAACC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACH,SAAS,CAAC;IAC9D,IAAI,IAAI,CAACjI,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACS,WAAW,CAAC,IAAI,CAAC0H,OAAO,CAAC;IACzC;IACA,IAAI,CAACA,OAAO,GAAG,IAAI;IACnB,IAAI,CAACF,SAAS,GAAG,IAAI;EACzB;EACA;AACJ;AACA;EACI,IAAIrK,EAAE,GAAG;IACL,OAAO,IAAI,CAACuK,OAAO;EACvB;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAME,IAAI,CAAC;EACP;AACJ;AACA;AACA;EACI7K,WAAW,CAAC8K,KAAK,EAAEC,MAAM,EAAE;IACvB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;EACI,OAAO5J,UAAU,CAACf,EAAE,EAAE;IAClB;IACA,IAAI4K,IAAI,GAAG,IAAIH,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACzB,IAAIxJ,MAAM,EAAE;MACR;MACA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,gBAAgB,CAACnB,EAAE,CAAC;MAC5C,IAAIkB,QAAQ,EAAE;QACV0J,IAAI,CAACF,KAAK,GAAGtJ,QAAQ,CAACF,QAAQ,CAACG,gBAAgB,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;QAC7DuJ,IAAI,CAACD,MAAM,GAAGvJ,QAAQ,CAACF,QAAQ,CAACG,gBAAgB,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;MACnE;MACA,OAAOuJ,IAAI;IACf,CAAC,MACI;MACDrJ,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MAC/B,OAAO,IAAI;IACf;EACJ;EACA;AACJ;AACA;AACA;EACI,OAAOC,IAAI,CAACoJ,CAAC,EAAE;IACX,OAAO,IAAIJ,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC9I,GAAG,CAACkJ,CAAC,CAAC;EAChC;EACA;AACJ;AACA;AACA;AACA;AACA;EACIlJ,GAAG,CAACkJ,CAAC,EAAE;IACF,gBAAkB,IAAI,CAAGH,KAAK,GAAGG,CAAC,CAACH,KAAK;IACxC,gBAAkB,IAAI,CAAGC,MAAM,GAAGE,CAAC,CAACF,MAAM;IAC3C,OAAQ,iBAAkB;IAAI;EAClC;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAMG,yBAAyB,CAAC;EAC5B;AACJ;AACA;AACA;EACIlL,WAAW,CAACI,EAAE,EAAEqC,QAAQ,EAAE;IACtB,IAAI,CAACrC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACqC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC0I,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB;AACR;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB;AACR;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB;AACR;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB;AACR;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;IACQ,IAAI,CAACrI,YAAY,GAAG,IAAI;IACxB,IAAI,CAACD,WAAW,GAAG,IAAI;IACvB,IAAI,CAACuI,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,QAAQ;IACzB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB;AACR;AACA;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB;AACR;AACA;IACQ,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB;AACR;AACA;IACQ,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACR;AACA;IACQ,IAAI,CAACjI,mBAAmB,GAAG,IAAI;IAC/B;AACR;AACA;IACQ,IAAI,CAACkI,OAAO,GAAG,IAAIjN,YAAY,EAAE;IACjC;AACR;AACA;IACQ,IAAI,CAACkN,UAAU,GAAG,IAAIlN,YAAY,EAAE;IACpC;AACR;AACA;IACQ,IAAI,CAACmN,MAAM,GAAG,IAAInN,YAAY,EAAE;IAChC,IAAI,CAACkE,YAAY,GAAG,IAAIvB,WAAW,CAACnC,EAAE,CAAC4E,aAAa,EAAEvC,QAAQ,CAAC;EACnE;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIuK,WAAW,CAACC,CAAC,EAAE;IACf,IAAIA,CAAC,KAAK7H,SAAS,IAAI6H,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,EAAE,EAAE;MAC3C,IAAI,CAAC9B,UAAU,GAAG,CAAC,CAAC8B,CAAC;MACrB,IAAI,CAACC,eAAe,EAAE;IAC1B;EACJ;EACA;AACJ;AACA;AACA;EACIlH,WAAW,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAAC,WAAW,CAAC,IAAI,CAACA,OAAO,CAAC,WAAW,CAAC,CAACC,aAAa,EAAE,EAAE;MAC/D,IAAI,CAACgH,eAAe,EAAE;IAC1B;IACA,IAAIjH,OAAO,CAAC,eAAe,CAAC,IAAI,CAACA,OAAO,CAAC,eAAe,CAAC,CAACC,aAAa,EAAE,EAAE;MACvE,IAAI,CAACiH,iBAAiB,EAAE;IAC5B;IACA,IAAIlH,OAAO,CAAC,eAAe,CAAC,IAAI,CAACA,OAAO,CAAC,eAAe,CAAC,CAACC,aAAa,EAAE,EAAE;MACvE,IAAI,CAACkH,iBAAiB,EAAE;IAC5B;EACJ;EACA;AACJ;AACA;EACI1H,QAAQ,GAAG;IACP,IAAI,CAACwH,eAAe,EAAE;EAC1B;EACA;AACJ;AACA;EACItH,WAAW,GAAG;IACV,IAAI,CAACyH,aAAa,EAAE;IACpB,IAAI,CAAC3B,YAAY,GAAG,IAAI;IACxB,IAAI,CAAC5H,YAAY,CAACZ,OAAO,EAAE;IAC3B,IAAI,CAACY,YAAY,GAAG,IAAI;EAC5B;EACA;AACJ;AACA;EACIuC,eAAe,GAAG;IACd;IACA,MAAMiH,GAAG,GAAG,IAAI,CAAClN,EAAE,CAAC4E,aAAa;IACjC,IAAI,CAACgH,SAAS,GAAGnB,IAAI,CAAC1J,UAAU,CAACmM,GAAG,CAAC;IACrC,IAAI,CAACrB,QAAQ,GAAGlM,QAAQ,CAACoB,UAAU,CAACmM,GAAG,CAAC;IACxC,IAAI,CAACxB,SAAS,GAAGjB,IAAI,CAAChJ,IAAI,CAAC,IAAI,CAACmK,SAAS,CAAC;IAC1C,IAAI,CAACD,QAAQ,GAAGhM,QAAQ,CAAC8B,IAAI,CAAC,IAAI,CAACoK,QAAQ,CAAC;IAC5C,IAAI,CAACkB,iBAAiB,EAAE;IACxB,IAAI,CAACC,iBAAiB,EAAE;EAC5B;EACA;AACJ;AACA;AACA;EACIG,SAAS,GAAG;IACR,IAAI,CAACzB,SAAS,GAAGjB,IAAI,CAAChJ,IAAI,CAAC,IAAI,CAACmK,SAAS,CAAC;IAC1C,IAAI,CAACD,QAAQ,GAAGhM,QAAQ,CAAC8B,IAAI,CAAC,IAAI,CAACoK,QAAQ,CAAC;IAC5C,IAAI,CAACuB,QAAQ,EAAE;EACnB;EACA;AACJ;AACA;AACA;EACIC,SAAS,GAAG;IACR,IAAI,CAAC,IAAI,CAAC1B,QAAQ,IAAI,CAAC,IAAI,CAACD,SAAS,EAAE;MACnC,OAAO,IAAI;IACf;IACA,OAAO;MACHd,IAAI,EAAE;QACFF,KAAK,EAAE,IAAI,CAACgB,SAAS,CAAChB,KAAK;QAC3BC,MAAM,EAAE,IAAI,CAACe,SAAS,CAACf;MAC3B,CAAC;MACDnG,QAAQ,EAAE;QACNT,GAAG,EAAE,IAAI,CAAC4H,QAAQ,CAAC7L,CAAC;QACpBoE,IAAI,EAAE,IAAI,CAACyH,QAAQ,CAAC9L;MACxB;IACJ,CAAC;EACL;EACA;AACJ;AACA;AACA;EACIiN,eAAe,GAAG;IACd;IACA,MAAM7H,OAAO,GAAG,IAAI,CAACjF,EAAE,CAAC4E,aAAa;IACrC;IACA,IAAI,CAACvC,QAAQ,CAACgD,WAAW,CAACJ,OAAO,EAAE,cAAc,CAAC;IAClD,IAAI,CAACgI,aAAa,EAAE;IACpB;IACA,IAAI,IAAI,CAAClC,UAAU,EAAE;MACjB,IAAI,CAAC1I,QAAQ,CAAC8C,QAAQ,CAACF,OAAO,EAAE,cAAc,CAAC;MAC/C,IAAI,CAACqI,aAAa,EAAE;IACxB;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIP,iBAAiB,GAAG;IAChB,IAAI,OAAO,IAAI,CAACb,aAAa,KAAK,SAAS,EAAE;MACzC,IAAI,IAAI,CAACA,aAAa,IAAI,IAAI,CAACR,SAAS,CAACf,MAAM,EAAE;QAC7C,IAAI,CAACU,YAAY,GAAI,IAAI,CAACK,SAAS,CAAChB,KAAK,GAAG,IAAI,CAACgB,SAAS,CAACf,MAAO;MACtE,CAAC,MACI;QACD,IAAI,CAACU,YAAY,GAAG,CAAC;MACzB;IACJ,CAAC,MACI;MACD;MACA,IAAIkC,CAAC,GAAGC,MAAM,CAAC,IAAI,CAACtB,aAAa,CAAC;MAClC,IAAI,CAACb,YAAY,GAAG/J,KAAK,CAACiM,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC;IACxC;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIP,iBAAiB,GAAG;IAChB,IAAI,CAAC,IAAI,CAACb,aAAa,EAAE;MACrB,IAAI,CAACb,YAAY,GAAG,IAAI;MACxB;IACJ;IACA,IAAI,OAAO,IAAI,CAACa,aAAa,KAAK,QAAQ,EAAE;MACxC,IAAI,IAAI,CAACA,aAAa,KAAK,QAAQ,EAAE;QACjC,IAAI,CAACb,YAAY,GAAG,IAAI,CAACtL,EAAE,CAAC4E,aAAa,CAAC6I,aAAa;MAC3D,CAAC,MACI;QACD,IAAI,CAACnC,YAAY,GAAGzE,QAAQ,CAAC6G,aAAa,CAAC,IAAI,CAACvB,aAAa,CAAC;MAClE;IACJ,CAAC,MACI;MACD,IAAI,CAACb,YAAY,GAAG,IAAI,CAACa,aAAa;IAC1C;EACJ;EACA;AACJ;AACA;AACA;AACA;EACImB,aAAa,GAAG;IACZ,IAAI,CAAC,IAAI,CAACrB,SAAS,EAAE;MACjB;IACJ;IACA;IACA,IAAI0B,cAAc;IAClB,IAAI,OAAO,IAAI,CAAC1B,SAAS,KAAK,QAAQ,EAAE;MACpC,IAAI,IAAI,CAACA,SAAS,KAAK,KAAK,EAAE;QAC1B0B,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACjE,CAAC,MACI;QACDA,cAAc,GAAG,IAAI,CAAC1B,SAAS,CAAC2B,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MAC9E;MACA,KAAK,IAAIhF,IAAI,IAAI6E,cAAc,EAAE;QAC7B;QACA;QACA,IAAIjI,MAAM,GAAG,IAAI,CAACqI,kBAAkB,CAACjF,IAAI,EAAG,gBAAeA,IAAK,EAAC,CAAC;QAClE,IAAIpD,MAAM,EAAE;UACR,IAAI,CAACuF,WAAW,CAAC+C,IAAI,CAAClF,IAAI,CAAC;UAC3B,IAAI,CAACkC,QAAQ,CAAClC,IAAI,CAAC,GAAGpD,MAAM;QAChC;MACJ;IACJ,CAAC,MACI;MACDiI,cAAc,GAAGnN,MAAM,CAACyN,IAAI,CAAC,IAAI,CAAChC,SAAS,CAAC;MAC5C,KAAK,IAAInD,IAAI,IAAI6E,cAAc,EAAE;QAC7B;QACA;QACA,IAAIjI,MAAM,GAAG,IAAI,CAACqI,kBAAkB,CAACjF,IAAI,EAAE,IAAI,CAACmD,SAAS,CAACnD,IAAI,CAAC,CAAC;QAChE,IAAIpD,MAAM,EAAE;UACR,IAAI,CAACuF,WAAW,CAAC+C,IAAI,CAAClF,IAAI,CAAC;UAC3B,IAAI,CAACkC,QAAQ,CAAClC,IAAI,CAAC,GAAGpD,MAAM;QAChC;MACJ;IACJ;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIqI,kBAAkB,CAACjF,IAAI,EAAEsB,GAAG,EAAE;IAC1B;IACA,MAAM8D,GAAG,GAAG,IAAI,CAAClO,EAAE,CAAC4E,aAAa;IACjC,IAAI,CAACkE,IAAI,CAACqF,KAAK,CAAC,yBAAyB,CAAC,EAAE;MACxC5M,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEsH,IAAI,CAAC;MAC3C,OAAO,IAAI;IACf;IACA,OAAO,IAAIqB,YAAY,CAAC+D,GAAG,EAAE,IAAI,CAAC7L,QAAQ,EAAEyG,IAAI,EAAEsB,GAAG,EAAE,IAAI,CAAClC,WAAW,CAACkG,IAAI,CAAC,IAAI,CAAC,CAAC;EACvF;EACA;AACJ;AACA;AACA;EACInB,aAAa,GAAG;IACZ,KAAK,IAAInE,IAAI,IAAI,IAAI,CAACmC,WAAW,EAAE;MAC/B,IAAI,CAACD,QAAQ,CAAClC,IAAI,CAAC,CAAChG,OAAO,EAAE;IACjC;IACA,IAAI,CAACmI,WAAW,GAAG,EAAE;IACrB,IAAI,CAACD,QAAQ,GAAG,CAAC,CAAC;EACtB;EACA;AACJ;AACA;AACA;AACA;EACI9C,WAAW,CAAClB,KAAK,EAAEtB,MAAM,EAAE;IACvB;IACA,IAAIsB,KAAK,YAAYmB,UAAU,IAAInB,KAAK,CAACoB,MAAM,KAAK,CAAC,EAAE;MACnD;IACJ;IACA,IAAI,IAAI,CAAC7D,mBAAmB,EAAE;MAC1B;MACAyC,KAAK,CAACsB,eAAe,EAAE;MACvBtB,KAAK,CAACuB,cAAc,EAAE;IAC1B;IACA,IAAI,CAAC,IAAI,CAAC2C,eAAe,EAAE;MACvB,IAAI,CAACK,aAAa,GAAG5L,QAAQ,CAACV,SAAS,CAAC+H,KAAK,CAAC;MAC9C,IAAI,CAACqH,WAAW,CAAC3I,MAAM,CAAC;MACxB,IAAI,CAACkB,eAAe,EAAE;IAC1B;EACJ;EACA;AACJ;AACA;AACA;EACIA,eAAe,GAAG;IACd,IAAI,CAACnD,WAAW,GAAGxE,SAAS,CAAC4H,QAAQ,EAAE,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,EAAE,gBAAkBD,KAAK,CAAG,CAAC;IACxI,IAAI,CAACvD,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,EAAE,gBAAkBD,KAAK,CAAG,CAAC,CAAC;IAC3I,IAAI,CAACvD,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,SAAS,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACuH,YAAY,EAAE,CAAC,CAAC;IAC7G;IACA;IACA,IAAIpH,UAAU,GAAG,mBAAmB,CAACC,IAAI,CAAClG,MAAM,CAACmG,SAAS,CAACC,SAAS,CAAC;IACrE,IAAI,CAACH,UAAU,EAAE;MACb,IAAI,CAACzD,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,YAAY,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACuH,YAAY,EAAE,CAAC,CAAC;IACpH;IACA,IAAI,CAAC7K,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,UAAU,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACuH,YAAY,EAAE,CAAC,CAAC;IAC9G,IAAI,CAAC7K,WAAW,CAAC5B,GAAG,CAAC5C,SAAS,CAAC4H,QAAQ,EAAE,aAAa,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACuH,YAAY,EAAE,CAAC,CAAC;EACrH;EACA;AACJ;AACA;AACA;EACIhH,iBAAiB,GAAG;IAChB,IAAI,CAAC7D,WAAW,CAACkC,WAAW,EAAE;IAC9B,IAAI,CAAClC,WAAW,GAAG,IAAI;EAC3B;EACA;AACJ;AACA;EACI6K,YAAY,GAAG;IACX,IAAI,IAAI,CAACpD,eAAe,EAAE;MACtB,IAAI,CAACqD,UAAU,EAAE;MACjB,IAAI,CAAChD,aAAa,GAAG,IAAI;MACzB,IAAI,CAACjE,iBAAiB,EAAE;IAC5B;EACJ;EACA;AACJ;AACA;AACA;EACIL,WAAW,CAACD,KAAK,EAAE;IACf,IAAI,IAAI,CAACkE,eAAe,IAAI,IAAI,CAACH,UAAU,IAAI,IAAI,CAACQ,aAAa,IAAI,IAAI,CAACE,QAAQ,IAAI,IAAI,CAACD,SAAS,EAAE;MAClG,IAAI,CAACgD,QAAQ,CAAC7O,QAAQ,CAACV,SAAS,CAAC+H,KAAK,CAAC,CAAC;MACxC,IAAI,CAACyH,UAAU,EAAE;IACrB;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIJ,WAAW,CAAC3I,MAAM,EAAE;IAChB;IACA,MAAMwH,GAAG,GAAG,IAAI,CAAClN,EAAE,CAAC4E,aAAa;IACjC,IAAI,CAAC4G,SAAS,GAAGf,IAAI,CAAC1J,UAAU,CAACmM,GAAG,CAAC;IACrC,IAAI,CAACzB,QAAQ,GAAG9L,QAAQ,CAACoB,UAAU,CAACmM,GAAG,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACxB,SAAS,GAAGjB,IAAI,CAAChJ,IAAI,CAAC,IAAI,CAAC+J,SAAS,CAAC;IAC1C,IAAI,CAACG,QAAQ,GAAGhM,QAAQ,CAAC8B,IAAI,CAAC,IAAI,CAACgK,QAAQ,CAAC;IAC5C,IAAI,IAAI,CAACH,YAAY,EAAE;MACnB,IAAI,CAACoD,WAAW,EAAE;IACtB;IACA,IAAI,CAACC,WAAW,EAAE;IAClB;IACA,IAAI,CAACjL,YAAY,CAAC7B,GAAG,EAAE;IACvB,IAAI,CAACqJ,eAAe,GAAGxF,MAAM;IAC7B,IAAI,CAACkJ,eAAe,EAAE;IACtB,IAAI,CAACnC,OAAO,CAACrG,IAAI,CAAC,IAAI,CAACyI,gBAAgB,EAAE,CAAC;EAC9C;EACA;AACJ;AACA;AACA;EACIN,UAAU,GAAG;IACT;IACA,IAAI,CAAC7K,YAAY,CAACd,MAAM,EAAE;IAC1B,IAAI,CAAC+J,MAAM,CAACvG,IAAI,CAAC,IAAI,CAACyI,gBAAgB,EAAE,CAAC;IACzC,IAAI,CAAC3D,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACK,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,IAAI,CAACH,YAAY,EAAE;MACnB,IAAI,CAACwD,aAAa,EAAE;IACxB;EACJ;EACA;AACJ;AACA;AACA;EACIL,UAAU,GAAG;IACT,IAAI,CAAC/B,UAAU,CAACtG,IAAI,CAAC,IAAI,CAACyI,gBAAgB,EAAE,CAAC;EACjD;EACA;AACJ;AACA;AACA;EACIA,gBAAgB,GAAG;IACf,OAAO;MACHE,IAAI,EAAE,IAAI,CAAC/O,EAAE,CAAC4E,aAAa;MAC3Bc,MAAM,EAAE,IAAI,CAACwF,eAAe,GAAG,IAAI,CAACA,eAAe,CAAClL,EAAE,GAAG,IAAI;MAC7D4K,IAAI,EAAE;QACFF,KAAK,EAAE,IAAI,CAACgB,SAAS,CAAChB,KAAK;QAC3BC,MAAM,EAAE,IAAI,CAACe,SAAS,CAACf;MAC3B,CAAC;MACDnG,QAAQ,EAAE;QACNT,GAAG,EAAE,IAAI,CAAC4H,QAAQ,CAAC7L,CAAC;QACpBoE,IAAI,EAAE,IAAI,CAACyH,QAAQ,CAAC9L;MACxB,CAAC;MACDmP,SAAS,EAAExO,MAAM,CAACyO,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7D,iBAAiB;IACvD,CAAC;EACL;EACA;AACJ;AACA;AACA;EACIwD,eAAe,GAAG;IACd,IAAI,CAACzD,UAAU,GAAG;MACdnJ,CAAC,EAAE,CAAC,CAAC,IAAI,CAACkJ,eAAe,CAACpC,IAAI,CAACqF,KAAK,CAAC,GAAG,CAAC;MACzCtD,CAAC,EAAE,CAAC,CAAC,IAAI,CAACK,eAAe,CAACpC,IAAI,CAACqF,KAAK,CAAC,GAAG,CAAC;MACzCe,CAAC,EAAE,CAAC,CAAC,IAAI,CAAChE,eAAe,CAACpC,IAAI,CAACqF,KAAK,CAAC,GAAG,CAAC;MACzCpO,CAAC,EAAE,CAAC,CAAC,IAAI,CAACmL,eAAe,CAACpC,IAAI,CAACqF,KAAK,CAAC,GAAG;IAC5C,CAAC;IACD,IAAI,CAAC/C,iBAAiB,GAAG5K,MAAM,CAACyO,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC9D,UAAU,CAAC;IAC3D;IACA,IAAI,IAAI,CAACe,aAAa,EAAE;MACpB;MACA,IAAI,IAAI,CAACd,iBAAiB,CAACpJ,CAAC,IAAI,CAAC,IAAI,CAACoJ,iBAAiB,CAACrL,CAAC,EAAE;QACvD,IAAI,CAACqL,iBAAiB,CAAC8D,CAAC,GAAG,IAAI;MACnC;MACA;MACA,IAAI,IAAI,CAAC9D,iBAAiB,CAACP,CAAC,IAAI,CAAC,IAAI,CAACO,iBAAiB,CAAC8D,CAAC,EAAE;QACvD,IAAI,CAAC9D,iBAAiB,CAACrL,CAAC,GAAG,IAAI;MACnC;MACA;MACA,IAAI,IAAI,CAACqL,iBAAiB,CAACrL,CAAC,IAAI,CAAC,IAAI,CAACqL,iBAAiB,CAACpJ,CAAC,EAAE;QACvD,IAAI,CAACoJ,iBAAiB,CAACP,CAAC,GAAG,IAAI;MACnC;MACA;MACA,IAAI,IAAI,CAACO,iBAAiB,CAAC8D,CAAC,IAAI,CAAC,IAAI,CAAC9D,iBAAiB,CAACpJ,CAAC,EAAE;QACvD,IAAI,CAACoJ,iBAAiB,CAACP,CAAC,GAAG,IAAI;MACnC;IACJ;EACJ;EACA;AACJ;AACA;AACA;AACA;EACI2D,QAAQ,CAAC9M,CAAC,EAAE;IACRA,CAAC,CAACI,QAAQ,CAAC,IAAI,CAACyJ,aAAa,CAAC;IAC9B;IACA,MAAM4D,IAAI,GAAG5I,IAAI,CAACC,KAAK,CAAC9E,CAAC,CAAC7B,CAAC,GAAG,IAAI,CAACiM,SAAS,CAACjM,CAAC,CAAC,GAAG,IAAI,CAACiM,SAAS,CAACjM,CAAC;IAClE;IACA,MAAMuP,IAAI,GAAG7I,IAAI,CAACC,KAAK,CAAC9E,CAAC,CAAC5B,CAAC,GAAG,IAAI,CAACgM,SAAS,CAAChM,CAAC,CAAC,GAAG,IAAI,CAACgM,SAAS,CAAChM,CAAC;IAClE,IAAI,IAAI,CAACqL,UAAU,CAACnJ,CAAC,EAAE;MACnB;MACA,IAAI,CAAC2J,QAAQ,CAAC7L,CAAC,GAAG,IAAI,CAAC2L,QAAQ,CAAC3L,CAAC,GAAGsP,IAAI;MACxC,IAAI,CAAC1D,SAAS,CAACf,MAAM,GAAG,IAAI,CAACa,SAAS,CAACb,MAAM,GAAGyE,IAAI;IACxD,CAAC,MACI,IAAI,IAAI,CAACjE,UAAU,CAACN,CAAC,EAAE;MACxB;MACA,IAAI,CAACa,SAAS,CAACf,MAAM,GAAG,IAAI,CAACa,SAAS,CAACb,MAAM,GAAGyE,IAAI;IACxD;IACA,IAAI,IAAI,CAACjE,UAAU,CAACpL,CAAC,EAAE;MACnB;MACA,IAAI,CAAC2L,SAAS,CAAChB,KAAK,GAAG,IAAI,CAACc,SAAS,CAACd,KAAK,GAAGyE,IAAI;IACtD,CAAC,MACI,IAAI,IAAI,CAAChE,UAAU,CAAC+D,CAAC,EAAE;MACxB;MACA,IAAI,CAACxD,SAAS,CAAChB,KAAK,GAAG,IAAI,CAACc,SAAS,CAACd,KAAK,GAAGyE,IAAI;MAClD,IAAI,CAACxD,QAAQ,CAAC9L,CAAC,GAAG,IAAI,CAAC4L,QAAQ,CAAC5L,CAAC,GAAGsP,IAAI;IAC5C;IACA,IAAI,CAACE,WAAW,EAAE;IAClB,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACnC,QAAQ,EAAE;EACnB;EACA;AACJ;AACA;AACA;EACIA,QAAQ,GAAG;IACP;IACA,MAAMoC,SAAS,GAAG,IAAI,CAACxP,EAAE,CAAC4E,aAAa;IACvC,IAAI,CAAC,IAAI,CAACuG,UAAU,IAAI,IAAI,CAACA,UAAU,CAACnJ,CAAC,IAAI,IAAI,CAACmJ,UAAU,CAACN,CAAC,IAAI,IAAI,CAACQ,YAAY,EAAE;MACjF,IAAI,CAAChJ,QAAQ,CAACI,QAAQ,CAAC+M,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC9D,SAAS,CAACf,MAAM,GAAG,IAAI,CAAC;IAC7E;IACA,IAAI,CAAC,IAAI,CAACQ,UAAU,IAAI,IAAI,CAACA,UAAU,CAAC+D,CAAC,IAAI,IAAI,CAAC/D,UAAU,CAACpL,CAAC,IAAI,IAAI,CAACsL,YAAY,EAAE;MACjF,IAAI,CAAChJ,QAAQ,CAACI,QAAQ,CAAC+M,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC9D,SAAS,CAAChB,KAAK,GAAG,IAAI,CAAC;IAC3E;IACA,IAAI,CAACrI,QAAQ,CAACI,QAAQ,CAAC+M,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC7D,QAAQ,CAAC9L,CAAC,GAAG,IAAI,CAAC;IACjE,IAAI,CAACwC,QAAQ,CAACI,QAAQ,CAAC+M,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC7D,QAAQ,CAAC7L,CAAC,GAAG,IAAI,CAAC;EACpE;EACA;AACJ;AACA;AACA;EACIyP,aAAa,GAAG;IACZ,IAAI,IAAI,CAAClE,YAAY,IAAI,CAAC,IAAI,CAACW,SAAS,EAAE;MACtC,IAAI,IAAI,CAACb,UAAU,CAACpL,CAAC,IAAI,IAAI,CAACoL,UAAU,CAAC+D,CAAC,EAAE;QACxC;QACA,MAAMO,SAAS,GAAGlJ,IAAI,CAACmJ,KAAK,CAAC,IAAI,CAAChE,SAAS,CAAChB,KAAK,GAAG,IAAI,CAACW,YAAY,CAAC;QACtE,IAAI,IAAI,CAACF,UAAU,CAACnJ,CAAC,EAAE;UACnB,IAAI,CAAC2J,QAAQ,CAAC7L,CAAC,IAAI,IAAI,CAAC4L,SAAS,CAACf,MAAM,GAAG8E,SAAS;QACxD;QACA,IAAI,CAAC/D,SAAS,CAACf,MAAM,GAAG8E,SAAS;MACrC,CAAC,MACI;QACD;QACA,MAAME,QAAQ,GAAGpJ,IAAI,CAACmJ,KAAK,CAAC,IAAI,CAACrE,YAAY,GAAG,IAAI,CAACK,SAAS,CAACf,MAAM,CAAC;QACtE,IAAI,IAAI,CAACQ,UAAU,CAACnJ,CAAC,EAAE;UACnB,IAAI,CAAC2J,QAAQ,CAAC9L,CAAC,IAAI,IAAI,CAAC6L,SAAS,CAAChB,KAAK,GAAGiF,QAAQ;QACtD;QACA,IAAI,CAACjE,SAAS,CAAChB,KAAK,GAAGiF,QAAQ;MACnC;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACIN,WAAW,GAAG;IACV,IAAI,IAAI,CAAC/D,YAAY,EAAE;MACnB;MACA,MAAMsE,QAAQ,GAAG,IAAI,CAAC7D,SAAS,CAACrB,KAAK,GAAG,IAAI,CAACqB,SAAS,CAAC8D,EAAE,GAAG,IAAI,CAAC9D,SAAS,CAAC+D,MAAM,GAAG,IAAI,CAAC/D,SAAS,CAAC1F,UAAU,GAAG,IAAI,CAACsF,QAAQ,CAAC9L,CAAC;MAC/H;MACA,MAAMkQ,SAAS,GAAG,IAAI,CAAChE,SAAS,CAACpB,MAAM,GAAG,IAAI,CAACoB,SAAS,CAACiE,EAAE,GAAG,IAAI,CAACjE,SAAS,CAACkE,MAAM,GAAG,IAAI,CAAClE,SAAS,CAACzF,UAAU,GAAG,IAAI,CAACqF,QAAQ,CAAC7L,CAAC;MACjI,IAAI,IAAI,CAACqL,UAAU,CAACnJ,CAAC,IAAK,IAAI,CAAC2J,QAAQ,CAAC7L,CAAC,GAAG,IAAI,CAACiM,SAAS,CAACzF,UAAU,GAAG,CAAE,EAAE;QACxE,IAAI,CAACqF,QAAQ,CAAC7L,CAAC,GAAG,CAAC,IAAI,CAACiM,SAAS,CAACzF,UAAU;QAC5C,IAAI,CAACoF,SAAS,CAACf,MAAM,GAAG,IAAI,CAACa,SAAS,CAACb,MAAM,GAAG,IAAI,CAACc,QAAQ,CAAC3L,CAAC,GAAG,IAAI,CAACiM,SAAS,CAACzF,UAAU;MAC/F;MACA,IAAI,IAAI,CAAC6E,UAAU,CAAC+D,CAAC,IAAK,IAAI,CAACvD,QAAQ,CAAC9L,CAAC,GAAG,IAAI,CAACkM,SAAS,CAAC1F,UAAU,GAAI,CAAC,EAAE;QACxE,IAAI,CAACsF,QAAQ,CAAC9L,CAAC,GAAG,CAAC,IAAI,CAACkM,SAAS,CAAC1F,UAAU;QAC5C,IAAI,CAACqF,SAAS,CAAChB,KAAK,GAAG,IAAI,CAACc,SAAS,CAACd,KAAK,GAAG,IAAI,CAACe,QAAQ,CAAC5L,CAAC,GAAG,IAAI,CAACkM,SAAS,CAAC1F,UAAU;MAC7F;MACA,IAAI,IAAI,CAACqF,SAAS,CAAChB,KAAK,GAAGkF,QAAQ,EAAE;QACjC,IAAI,CAAClE,SAAS,CAAChB,KAAK,GAAGkF,QAAQ;MACnC;MACA,IAAI,IAAI,CAAClE,SAAS,CAACf,MAAM,GAAGoF,SAAS,EAAE;QACnC,IAAI,CAACrE,SAAS,CAACf,MAAM,GAAGoF,SAAS;MACrC;MACA;AACZ;AACA;AACA;MACY,IAAI,IAAI,CAAC1E,YAAY,EAAE;QACnB,IAAI,CAACW,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,IAAI,CAACb,UAAU,CAAC+D,CAAC,IAAI,IAAI,CAAC/D,UAAU,CAACpL,CAAC,KACtC,IAAI,CAAC2L,SAAS,CAAChB,KAAK,GAAG,IAAI,CAACW,YAAY,IAAK0E,SAAS,EAAE;UACzD;UACA,MAAMJ,QAAQ,GAAGpJ,IAAI,CAACmJ,KAAK,CAACK,SAAS,GAAG,IAAI,CAAC1E,YAAY,CAAC;UAC1D,IAAI,IAAI,CAACF,UAAU,CAAC+D,CAAC,EAAE;YACnB,IAAI,CAACvD,QAAQ,CAAC9L,CAAC,IAAI,IAAI,CAAC6L,SAAS,CAAChB,KAAK,GAAGiF,QAAQ;UACtD;UACA,IAAI,CAACjE,SAAS,CAAChB,KAAK,GAAGiF,QAAQ;UAC/B,IAAI,CAACjE,SAAS,CAACf,MAAM,GAAGoF,SAAS;UACjC,IAAI,CAAC/D,SAAS,GAAG,IAAI;QACzB;QACA,IAAI,CAAC,IAAI,CAACb,UAAU,CAACnJ,CAAC,IAAI,IAAI,CAACmJ,UAAU,CAACN,CAAC,KACtC,IAAI,CAACa,SAAS,CAACf,MAAM,GAAG,IAAI,CAACU,YAAY,IAAKuE,QAAQ,EAAE;UACzD;UACA,MAAMH,SAAS,GAAGlJ,IAAI,CAACmJ,KAAK,CAACE,QAAQ,GAAG,IAAI,CAACvE,YAAY,CAAC;UAC1D,IAAI,IAAI,CAACF,UAAU,CAACnJ,CAAC,EAAE;YACnB,IAAI,CAAC2J,QAAQ,CAAC7L,CAAC,IAAI,IAAI,CAAC4L,SAAS,CAACf,MAAM,GAAG8E,SAAS;UACxD;UACA,IAAI,CAAC/D,SAAS,CAAChB,KAAK,GAAGkF,QAAQ;UAC/B,IAAI,CAAClE,SAAS,CAACf,MAAM,GAAG8E,SAAS;UACjC,IAAI,CAACzD,SAAS,GAAG,IAAI;QACzB;MACJ;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACIsD,SAAS,GAAG;IACR;IACA,MAAMY,SAAS,GAAG,CAAC,IAAI,CAAC5D,WAAW,GAAG,CAAC,GAAG,IAAI,CAACA,WAAW;IAC1D;IACA,MAAM6D,QAAQ,GAAG,CAAC,IAAI,CAAC9D,UAAU,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU;IACvD,IAAI,IAAI,CAACX,SAAS,CAACf,MAAM,GAAGuF,SAAS,EAAE;MACnC,IAAI,CAACxE,SAAS,CAACf,MAAM,GAAGuF,SAAS;MACjC,IAAI,IAAI,CAAC/E,UAAU,CAACnJ,CAAC,EAAE;QACnB,IAAI,CAAC2J,QAAQ,CAAC7L,CAAC,GAAG,IAAI,CAAC2L,QAAQ,CAAC3L,CAAC,IAAI,IAAI,CAAC0L,SAAS,CAACb,MAAM,GAAGuF,SAAS,CAAC;MAC3E;IACJ;IACA,IAAI,IAAI,CAACxE,SAAS,CAAChB,KAAK,GAAGyF,QAAQ,EAAE;MACjC,IAAI,CAACzE,SAAS,CAAChB,KAAK,GAAGyF,QAAQ;MAC/B,IAAI,IAAI,CAAChF,UAAU,CAAC+D,CAAC,EAAE;QACnB,IAAI,CAACvD,QAAQ,CAAC9L,CAAC,GAAG,IAAI,CAAC4L,QAAQ,CAAC5L,CAAC,IAAI,IAAI,CAAC2L,SAAS,CAACd,KAAK,GAAGyF,QAAQ,CAAC;MACzE;IACJ;IACA,IAAI,IAAI,CAAC3D,WAAW,IAAI,IAAI,CAACd,SAAS,CAACf,MAAM,GAAG,IAAI,CAAC6B,WAAW,EAAE;MAC9D,IAAI,CAACd,SAAS,CAACf,MAAM,GAAG,IAAI,CAAC6B,WAAW;MACxC,IAAI,IAAI,CAACrB,UAAU,CAACnJ,CAAC,EAAE;QACnB,IAAI,CAAC2J,QAAQ,CAAC7L,CAAC,GAAG,IAAI,CAAC2L,QAAQ,CAAC3L,CAAC,IAAI,IAAI,CAAC0L,SAAS,CAACb,MAAM,GAAG,IAAI,CAAC6B,WAAW,CAAC;MAClF;IACJ;IACA,IAAI,IAAI,CAACD,UAAU,IAAI,IAAI,CAACb,SAAS,CAAChB,KAAK,GAAG,IAAI,CAAC6B,UAAU,EAAE;MAC3D,IAAI,CAACb,SAAS,CAAChB,KAAK,GAAG,IAAI,CAAC6B,UAAU;MACtC,IAAI,IAAI,CAACpB,UAAU,CAAC+D,CAAC,EAAE;QACnB,IAAI,CAACvD,QAAQ,CAAC9L,CAAC,GAAG,IAAI,CAAC4L,QAAQ,CAAC5L,CAAC,IAAI,IAAI,CAAC2L,SAAS,CAACd,KAAK,GAAG,IAAI,CAAC6B,UAAU,CAAC;MAChF;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACImC,WAAW,GAAG;IACV;IACA,MAAM1O,EAAE,GAAG,IAAI,CAACsL,YAAY;IAC5B;IACA,MAAMpK,QAAQ,GAAGD,MAAM,CAACE,gBAAgB,CAACnB,EAAE,CAAC;IAC5C,IAAIkB,QAAQ,EAAE;MACV;MACA,IAAIQ,CAAC,GAAGR,QAAQ,CAACG,gBAAgB,CAAC,UAAU,CAAC;MAC7C;MACA,MAAM+O,QAAQ,GAAGnP,MAAM,CAACE,gBAAgB,CAAC,IAAI,CAACnB,EAAE,CAAC4E,aAAa,CAAC;MAC/D;MACA,IAAIyL,UAAU,GAAGD,QAAQ,CAAC/O,gBAAgB,CAAC,WAAW,CAAC,CAACuM,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;MAC1F,IAAI,CAAC/B,SAAS,GAAG,CAAC,CAAC;MACnB,IAAI,CAACA,SAAS,CAACrB,KAAK,GAAG1K,EAAE,CAACsQ,WAAW;MACrC,IAAI,CAACvE,SAAS,CAACpB,MAAM,GAAG3K,EAAE,CAACuQ,YAAY;MACvC,IAAI,CAACxE,SAAS,CAAC8D,EAAE,GAAGzO,QAAQ,CAACF,QAAQ,CAACG,gBAAgB,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;MAC5E,IAAI,CAAC0K,SAAS,CAACiE,EAAE,GAAG5O,QAAQ,CAACF,QAAQ,CAACG,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC;MAC7E,IAAI,CAAC0K,SAAS,CAAC+D,MAAM,GAAG,IAAI,CAAC9P,EAAE,CAAC4E,aAAa,CAAC4L,UAAU,GAAG,IAAI,CAAC7E,QAAQ,CAAC9L,CAAC;MAC1E,IAAI,CAACkM,SAAS,CAACkE,MAAM,GAAG,IAAI,CAACjQ,EAAE,CAAC4E,aAAa,CAAC6L,SAAS,GAAG,IAAI,CAAC9E,QAAQ,CAAC7L,CAAC;MACzE,IAAIuQ,UAAU,CAAChQ,MAAM,IAAI,CAAC,EAAE;QACxB,IAAI,CAAC0L,SAAS,CAAC1F,UAAU,GAAGjF,QAAQ,CAACiP,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACvD,IAAI,CAACtE,SAAS,CAACzF,UAAU,GAAGlF,QAAQ,CAACiP,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC3D,CAAC,MACI;QACD,IAAI,CAACtE,SAAS,CAAC1F,UAAU,GAAG,CAAC;QAC7B,IAAI,CAAC0F,SAAS,CAACzF,UAAU,GAAG,CAAC;MACjC;MACA,IAAI,CAACyF,SAAS,CAACvH,QAAQ,GAAGtD,QAAQ,CAACG,gBAAgB,CAAC,UAAU,CAAC;MAC/D,IAAIK,CAAC,KAAK,QAAQ,EAAE;QAChB,IAAI,CAACW,QAAQ,CAACI,QAAQ,CAACzC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC;MACtD;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACI8O,aAAa,GAAG;IACZ,IAAI,IAAI,CAAC/C,SAAS,IAAI,IAAI,CAACA,SAAS,CAACvH,QAAQ,KAAK,QAAQ,EAAE;MACxD,IAAI,CAACnC,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAAC6I,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC;IACrE;IACA,IAAI,CAACS,SAAS,GAAG,IAAI;EACzB;EACA;AACJ;AACA;AACA;EACI4C,WAAW,GAAG;IACV;IACA,IAAI,CAAC7C,SAAS,GAAG;MAAEjM,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC/B,IAAI,IAAI,CAACsM,MAAM,EAAE;MACb,IAAI,OAAO,IAAI,CAACA,MAAM,KAAK,QAAQ,EAAE;QACjC,IAAI,CAACN,SAAS,GAAG;UAAEjM,CAAC,EAAE,IAAI,CAACuM,MAAM;UAAEtM,CAAC,EAAE,IAAI,CAACsM;QAAO,CAAC;MACvD,CAAC,MACI,IAAIsE,KAAK,CAACC,OAAO,CAAC,IAAI,CAACvE,MAAM,CAAC,EAAE;QACjC,IAAI,CAACN,SAAS,GAAG;UAAEjM,CAAC,EAAE,IAAI,CAACuM,MAAM,CAAC,CAAC,CAAC;UAAEtM,CAAC,EAAE,IAAI,CAACsM,MAAM,CAAC,CAAC;QAAE,CAAC;MAC7D;IACJ;EACJ;AACJ;AACAtB,yBAAyB,CAACtC,IAAI,GAAG,SAASoI,iCAAiC,CAAClI,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIoC,yBAAyB,EAAEpL,MAAM,CAACiJ,iBAAiB,CAACjJ,MAAM,CAACP,UAAU,CAAC,EAAEO,MAAM,CAACiJ,iBAAiB,CAACjJ,MAAM,CAACN,SAAS,CAAC,CAAC;AAAE,CAAC;AACxN0L,yBAAyB,CAAClC,IAAI,GAAG,aAAclJ,MAAM,CAACmJ,iBAAiB,CAAC;EAAEC,IAAI,EAAEgC,yBAAyB;EAAE/B,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;EAAES,MAAM,EAAE;IAAEyC,SAAS,EAAE,WAAW;IAAEC,aAAa,EAAE,eAAe;IAAEC,aAAa,EAAE,eAAe;IAAEC,MAAM,EAAE,QAAQ;IAAEC,UAAU,EAAE,YAAY;IAAEC,WAAW,EAAE,aAAa;IAAEC,UAAU,EAAE,YAAY;IAAEC,WAAW,EAAE,aAAa;IAAEjI,mBAAmB,EAAE,qBAAqB;IAAEqI,WAAW,EAAE;EAAc,CAAC;EAAEnD,OAAO,EAAE;IAAEgD,OAAO,EAAE,SAAS;IAAEC,UAAU,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAS,CAAC;EAAEjD,QAAQ,EAAE,CAAC,aAAa,CAAC;EAAEC,QAAQ,EAAE,CAACjK,MAAM,CAACkK,oBAAoB;AAAE,CAAC,CAAC;AAC7kB;AACAkB,yBAAyB,CAACjB,cAAc,GAAG,MAAM,CAC7C;EAAEf,IAAI,EAAE3J;AAAW,CAAC,EACpB;EAAE2J,IAAI,EAAE1J;AAAU,CAAC,CACtB;AACD0L,yBAAyB,CAAChB,cAAc,GAAG;EACvC8C,WAAW,EAAE,CAAC;IAAE9D,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC9B4M,SAAS,EAAE,CAAC;IAAEnD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC5B6M,aAAa,EAAE,CAAC;IAAEpD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAChC8M,aAAa,EAAE,CAAC;IAAErD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAChC+M,MAAM,EAAE,CAAC;IAAEtD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACzBgN,UAAU,EAAE,CAAC;IAAEvD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC7BiN,WAAW,EAAE,CAAC;IAAExD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC9BkN,UAAU,EAAE,CAAC;IAAEzD,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC7BmN,WAAW,EAAE,CAAC;IAAE1D,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EAC9BkF,mBAAmB,EAAE,CAAC;IAAEuE,IAAI,EAAEzJ;EAAM,CAAC,CAAC;EACtCoN,OAAO,EAAE,CAAC;IAAE3D,IAAI,EAAExJ;EAAO,CAAC,CAAC;EAC3BoN,UAAU,EAAE,CAAC;IAAE5D,IAAI,EAAExJ;EAAO,CAAC,CAAC;EAC9BqN,MAAM,EAAE,CAAC;IAAE7D,IAAI,EAAExJ;EAAO,CAAC;AAC7B,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAO0K,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKtK,MAAM,CAACuK,iBAAiB,CAACa,yBAAyB,EAAE,CAAC;IAC/GhC,IAAI,EAAE5J,SAAS;IACf6K,IAAI,EAAE,CAAC;MACCG,QAAQ,EAAE,eAAe;MACzBR,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEZ,IAAI,EAAEpJ,MAAM,CAACP;IAAW,CAAC,EAAE;MAAE2J,IAAI,EAAEpJ,MAAM,CAACN;IAAU,CAAC,CAAC;EAAE,CAAC,EAAE;IAAE6M,SAAS,EAAE,CAAC;MAC7FnD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE6M,aAAa,EAAE,CAAC;MAChBpD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE8M,aAAa,EAAE,CAAC;MAChBrD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAE+M,MAAM,EAAE,CAAC;MACTtD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEgN,UAAU,EAAE,CAAC;MACbvD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEiN,WAAW,EAAE,CAAC;MACdxD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEkN,UAAU,EAAE,CAAC;MACbzD,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEmN,WAAW,EAAE,CAAC;MACd1D,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEkF,mBAAmB,EAAE,CAAC;MACtBuE,IAAI,EAAEzJ;IACV,CAAC,CAAC;IAAEoN,OAAO,EAAE,CAAC;MACV3D,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEoN,UAAU,EAAE,CAAC;MACb5D,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEqN,MAAM,EAAE,CAAC;MACT7D,IAAI,EAAExJ;IACV,CAAC,CAAC;IAAEsN,WAAW,EAAE,CAAC;MACd9D,IAAI,EAAEzJ;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA,MAAMwR,sBAAsB,CAAC;AAE7BA,sBAAsB,CAACrI,IAAI,GAAG,SAASsI,8BAA8B,CAACpI,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAImI,sBAAsB,GAAG;AAAE,CAAC;AACxHA,sBAAsB,CAACE,IAAI,GAAG,aAAcrR,MAAM,CAACsR,gBAAgB,CAAC;EAAElI,IAAI,EAAE+H;AAAuB,CAAC,CAAC;AACrGA,sBAAsB,CAACI,IAAI,GAAG,aAAcvR,MAAM,CAACwR,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,YAAY;EAAE,CAAC,OAAOlH,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKtK,MAAM,CAACuK,iBAAiB,CAAC4G,sBAAsB,EAAE,CAAC;IAC5G/H,IAAI,EAAErJ,QAAQ;IACdsK,IAAI,EAAE,CAAC;MACCoH,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,CACVrO,yBAAyB,EACzB+H,yBAAyB,CAC5B;MACDuG,OAAO,EAAE,CACLtO,yBAAyB,EACzB+H,yBAAyB;IAEjC,CAAC;EACT,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC,GAAG;AACzB,CAAC,YAAY;EAAE,CAAC,OAAOwG,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK5R,MAAM,CAAC6R,kBAAkB,CAACV,sBAAsB,EAAE;IAAEO,YAAY,EAAE,CAACrO,yBAAyB,EAAE+H,yBAAyB,CAAC;IAAEuG,OAAO,EAAE,CAACtO,yBAAyB,EAAE+H,yBAAyB;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEpQ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS/H,yBAAyB,EAAE+H,yBAAyB,EAAE+F,sBAAsB,EAAElR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}